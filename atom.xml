<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>东方星痕</title>
  
  <subtitle>请你给我力量，给我方向， 用风一样的翅膀，更用力的飞翔.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ystyle.top/"/>
  <updated>2020-09-10T17:00:26.000Z</updated>
  <id>http://ystyle.top/</id>
  
  <author>
    <name>YSTYLE</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用Docker快速上手鸿蒙</title>
    <link href="http://ystyle.top/2020/09/10/compile-openharmony-indokcer/"/>
    <id>http://ystyle.top/2020/09/10/compile-openharmony-indokcer/</id>
    <published>2020-09-10T17:00:26.000Z</published>
    <updated>2020-09-10T17:00:26.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><ul><li>在机器上安装好Docker</li></ul><h3 id="编译鸿蒙系统镜像"><a href="#编译鸿蒙系统镜像" class="headerlink" title="编译鸿蒙系统镜像"></a>编译鸿蒙系统镜像</h3><ul><li>打开终端执行以下命令</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/OpenHarmony</span><br><span class="line">cd ~/OpenHarmony</span><br><span class="line">docker run --rm -ti -v $&#123;PWD&#125;/out:/OpenHarmony/out ystyle/open-harmony</span><br></pre></td></tr></table></figure><ul><li>编译成功后各镜像在out目录下面, 默认编译的是<code>Hi3861</code>开发板的系统镜像, 可自行烧录到固定测试</li><li>如果要编译其它板子可以设置dokcer镜像的环境变量<code>HARDWARE</code> 目前支持: <code>wifiiot</code>、<code>ipcamera_hi3516dv300</code>、<code>ipcamera_hi3518ev300</code></li></ul><h3 id="编写应用程序"><a href="#编写应用程序" class="headerlink" title="编写应用程序"></a>编写应用程序</h3><ul><li>示例在这<a href="https://openharmony.gitee.com/openharmony/docs/blob/master/quick-start/Hi3861%E5%BC%80%E5%8F%91%E6%9D%BF%E7%AC%AC%E4%BA%8C%E4%B8%AA%E7%A4%BA%E4%BE%8B%E7%A8%8B%E5%BA%8F.md" target="_blank" rel="noopener">Hi3861开发板第二个示例程序</a></li><li>创建一个代码目录: <code>my_first_app</code></li><li><p>新建文件<code>hello_world.c</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ohos_init.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ohos_types.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HelloWorld</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"[DEMO] Hello world.\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">SYS_RUN(HelloWorld);</span><br></pre></td></tr></table></figure></li><li><p>新建文件<code>BUILD.gn</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">static_library(<span class="string">"myapp"</span>) &#123;</span><br><span class="line">  sources = [</span><br><span class="line">      <span class="string">"hello_world.c"</span></span><br><span class="line">  ]</span><br><span class="line">  include_dirs = [</span><br><span class="line">      <span class="string">"//utils/native/liteos/include"</span></span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>新建文件<code>APP_BUILD.gn</code></p></li><li><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>(<span class="string">"//build/lite/config/component/lite_component.gni"</span>)</span><br><span class="line"></span><br><span class="line">lite_component(<span class="string">"app"</span>) &#123;</span><br><span class="line">    features = [</span><br><span class="line">        <span class="string">"my_first_app:myapp"</span>,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>现在的目录结构为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── APP_BUILD.gn</span><br><span class="line">├── BUILD.gn</span><br><span class="line">└── hello_world.c</span><br></pre></td></tr></table></figure></li></ul><h3 id="编译代码"><a href="#编译代码" class="headerlink" title="编译代码"></a>编译代码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm \</span><br><span class="line">  -e HARDWARE=wifiiot \</span><br><span class="line">  -v $&#123;PWD&#125;/out:/OpenHarmony/out \</span><br><span class="line">  -v $&#123;PWD&#125;/APP_BUILD.gn:/OpenHarmony/applications/sample/wifi-iot/app/APP_BUILD.gn \</span><br><span class="line">  -v $&#123;PWD&#125;:/OpenHarmony/applications/sample/wifi-iot/app/my_first_app \</span><br><span class="line">  ystyle/open-harmony</span><br></pre></td></tr></table></figure><blockquote><p>编译后的文件在out目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── APP_BUILD.gn</span><br><span class="line">├── BUILD.gn</span><br><span class="line">├── hello_world.c</span><br><span class="line">└── out</span><br><span class="line">    └── wifiiot</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="其它问题"><a href="#其它问题" class="headerlink" title="其它问题"></a>其它问题</h3><ul><li>如果实际开发，建议直接替换掉 整个<code>/OpenHarmony/applications/sample/wifi-iot/app/</code> 目录, 目录里边的都是示例代码.</li><li>如果要修改启动编译的命令的话，可以写好shell 脚本， run时指定cmd命令<ul><li>构建命令为: <code>python build.py ${HARDWARE} -b debug</code></li><li><code>docker run --rm -v ${PWD}/mybuild.sh:/OpenHarmony/mybuild.sh ystyle/open-harmony /OpenHarmony/mybuild.sh</code></li></ul></li><li>更新鸿蒙代码: 用修改镜像启动命令的方法，在<code>/OpenHarmony</code>目录执行<code>repo sync -c</code> 命令</li><li>其它驱动开发或系统组件开发也可以用挂载的方式把工程目录映射到容器，开发并编译</li></ul><h3 id="本文所使用Docker镜像的dockerfile文件"><a href="#本文所使用Docker镜像的dockerfile文件" class="headerlink" title="本文所使用Docker镜像的dockerfile文件"></a>本文所使用Docker镜像的dockerfile文件</h3><blockquote><p>参考<code>@keithyau</code><a href="https://openharmony.gitee.com/keithyau/build_lite/blob/master/Dockerfile20.04" target="_blank" rel="noopener">所写的Dockerfile</a>修改而来</p></blockquote><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">20.04</span> AS build-<span class="keyword">env</span></span><br><span class="line"><span class="keyword">LABEL</span> version=2020-09-10</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set your hardware</span></span><br><span class="line"><span class="keyword">ENV</span> HARDWARE=wifiiot</span><br><span class="line"><span class="comment"># Prevent interactive</span></span><br><span class="line"><span class="keyword">ENV</span> DEBIAN_FRONTEND=noninteractive</span><br><span class="line"></span><br><span class="line"><span class="comment"># Setting up the build environment</span></span><br><span class="line"><span class="keyword">RUN</span> sed -i 's/archive.ubuntu.com/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list &amp;&amp; \</span><br><span class="line">    sed -i 's/security.ubuntu.com/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list &amp;&amp; \</span><br><span class="line">    apt-get clean -y &amp;&amp; \</span><br><span class="line">    apt-get -y update &amp;&amp; \</span><br><span class="line">    apt-get remove python* -y &amp;&amp; \</span><br><span class="line">    apt-get install git curl build-essential libdbus-glib-1-dev libgirepository1.0-dev -y &amp;&amp; \</span><br><span class="line">    apt-get install zip libncurses5-dev pkg-config -y &amp;&amp; \</span><br><span class="line">    apt-get install python3-pip -y &amp;&amp; \</span><br><span class="line">    apt-get install scons dosfstools mtools -y &amp;&amp; \</span><br><span class="line">    rm -rf /var/lib/apt/lists/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># Setup python</span></span><br><span class="line"><span class="comment"># Make sure python install on the right python version path</span></span><br><span class="line"><span class="keyword">RUN</span> update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1 &amp;&amp; \</span><br><span class="line">    pip3 install --upgrade pip -i https://mirrors.aliyun.com/pypi/simple &amp;&amp; \</span><br><span class="line">    pip3 install ninja kconfiglib pycryptodome ecdsa -i https://mirrors.aliyun.com/pypi/simple &amp;&amp; \</span><br><span class="line">    pip3 install six --upgrade --ignore-installed six -i https://pypi.tuna.tsinghua.edu.cn/simple &amp;&amp; \</span><br><span class="line">    rm -rf /var/cache/apt/archives</span><br><span class="line"></span><br><span class="line"><span class="comment">#Fix Dash</span></span><br><span class="line"><span class="keyword">RUN</span> rm -rf /bin/sh &amp;&amp; \</span><br><span class="line">    ln -s /bin/bash /bin/sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#Setup gn</span></span><br><span class="line"><span class="keyword">ENV</span> PATH /tools/gn:$PATH</span><br><span class="line"><span class="keyword">RUN</span> mkdir /tools &amp;&amp; \</span><br><span class="line">    cd /tools &amp;&amp; \</span><br><span class="line">    curl -LO http://tools.harmonyos.com/mirrors/gn/1523/linux/gn.1523.tar &amp;&amp; \</span><br><span class="line">    tar xvf /tools/gn.1523.tar &amp;&amp; \</span><br><span class="line">    rm -rf /tools/gn.1523.tar</span><br><span class="line"></span><br><span class="line"><span class="comment">#Setup LLVM</span></span><br><span class="line"><span class="comment">#ADD ./llvm-linux-9.0.0-34042.tar /tools</span></span><br><span class="line"><span class="keyword">ENV</span> PATH /tools/llvm/bin:$PATH</span><br><span class="line"><span class="keyword">RUN</span> cd /tools &amp;&amp; \</span><br><span class="line">    curl -LO http://tools.harmonyos.com/mirrors/clang/9.0.0-34042/linux/llvm-linux-9.0.0-34042.tar &amp;&amp; \</span><br><span class="line">    tar xvf /tools/llvm-linux-9.0.0-34042.tar &amp;&amp; \</span><br><span class="line">    rm -rf /tools/llvm-linux-9.0.0-34042.tar</span><br><span class="line"></span><br><span class="line"><span class="comment">#Setup hc-gen</span></span><br><span class="line"><span class="keyword">ENV</span> PATH /tools/hc-gen:$PATH</span><br><span class="line"><span class="keyword">RUN</span> cd /tools &amp;&amp; \</span><br><span class="line">    curl -LO http://tools.harmonyos.com/mirrors/hc-gen/0.64/linux/hc-gen-0.64-linux.tar &amp;&amp; \</span><br><span class="line">    tar xvf /tools/hc-gen-0.64-linux.tar &amp;&amp; \</span><br><span class="line">    rm -rf /tools/hc-gen-0.64-linux.tar</span><br><span class="line"></span><br><span class="line"><span class="comment">#Setup gcc_riscv32</span></span><br><span class="line"><span class="keyword">ENV</span> PATH /tools/gcc_riscv32/bin:$PATH</span><br><span class="line"><span class="keyword">RUN</span> cd /tools &amp;&amp; \</span><br><span class="line">    curl -LO http://tools.harmonyos.com/mirrors/gcc_riscv32/7.3.0/linux/gcc_riscv32-linux-7.3.0.tar.gz &amp;&amp; \</span><br><span class="line">    tar xvf /tools/gcc_riscv32-linux-7.3.0.tar.gz &amp;&amp; \</span><br><span class="line">    rm -rf /tools/gcc_riscv32-linux-7.3.0.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#Create work dir</span></span><br><span class="line"><span class="keyword">RUN</span> mkdir /OpenHarmony</span><br><span class="line"><span class="keyword">WORKDIR</span> /OpenHarmony</span><br><span class="line"></span><br><span class="line"><span class="comment"># Gitee Repo tool and download</span></span><br><span class="line"><span class="comment"># Make sure requests install at the right location</span></span><br><span class="line"><span class="keyword">RUN</span> curl https://gitee.com/oschina/repo/raw/fork_flow/repo-py3 &gt; /usr/bin/repo &amp;&amp; \</span><br><span class="line">    chmod a+x /usr/bin/repo &amp;&amp; \</span><br><span class="line">    pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple requests</span><br><span class="line"></span><br><span class="line"><span class="comment">#Download source, update to your info</span></span><br><span class="line"><span class="keyword">RUN</span> git config --global user.email "lxy5266@live.com" &amp;&amp; \</span><br><span class="line">    git config --global user.name "ystyle" &amp;&amp; \</span><br><span class="line">    git config --global color.ui false &amp;&amp; \</span><br><span class="line">    git config --global credential.helper store &amp;&amp; \</span><br><span class="line">    repo init -u https://gitee.com/openharmony/manifest.git -b master --repo-branch=stable --no-repo-verify &amp;&amp; \</span><br><span class="line">    repo sync -c</span><br><span class="line"></span><br><span class="line"><span class="comment"># compile</span></span><br><span class="line"><span class="keyword">ENV</span> LANGUAGE en</span><br><span class="line"><span class="keyword">ENV</span> LANG en_US.utf-<span class="number">8</span></span><br><span class="line"><span class="keyword">RUN</span> export|grep LANG</span><br><span class="line"><span class="keyword">CMD</span> ["/bin/bash", "-c", "python build.py $&#123;HARDWARE&#125; -b debug"]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在机器上安装好Docker&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;编译鸿蒙系统镜像&quot;&gt;&lt;a href=&quot;#编译鸿蒙系统镜像&quot; c
      
    
    </summary>
    
      <category term="系统" scheme="http://ystyle.top/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="docker" scheme="http://ystyle.top/tags/docker/"/>
    
      <category term="鸿蒙" scheme="http://ystyle.top/tags/%E9%B8%BF%E8%92%99/"/>
    
  </entry>
  
  <entry>
    <title>转换在线漫画为mobi格式</title>
    <link href="http://ystyle.top/2020/09/04/comic-cli/"/>
    <id>http://ystyle.top/2020/09/04/comic-cli/</id>
    <published>2020-09-04T04:46:26.000Z</published>
    <updated>2020-09-04T04:46:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>转换在线漫画为mobi格式的工具</p></blockquote><h3 id="支持的网站"><a href="#支持的网站" class="headerlink" title="支持的网站"></a>支持的网站</h3><ul><li>动漫之家</li><li>喵同人</li></ul><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ul><li>必需安装<code>谷歌浏览器chrome</code></li><li>下载<a href="https://pan.baidu.com/s/1EPkLJ7WIJYdYtRHBEMqw0w" target="_blank" rel="noopener">comic-cli: https://pan.baidu.com/s/1EPkLJ7WIJYdYtRHBEMqw0w</a>, 提取码:h4np</li><li><p>新建一个文件文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 注释:  以#号或//开头的行会被忽略，空行也会被忽略</span><br><span class="line">// 本文件会生成三个漫画文件</span><br><span class="line"></span><br><span class="line">// 下载整个动漫，直接写列表地址</span><br><span class="line">https://www.dmzj.com/info/wodenvpengyouyoudianqiguaidanshihenkeai.html</span><br><span class="line"></span><br><span class="line">// 也可以载指定的章节，填写需要下载的章节地址，同一漫画的章节会合并成同一个文件</span><br><span class="line">https://www.dmzj.com/view/benghuai3rd/102129.html#@page=1</span><br><span class="line">https://www.dmzj.com/view/benghuai3rd/101570.html</span><br><span class="line">// 这行地址的章节会被忽略</span><br><span class="line"># https://www.dmzj.com/view/benghuai3rd/101013.html</span><br><span class="line"></span><br><span class="line">// 喵同人网站的写列表地址就好了</span><br><span class="line">https://zh.nyahentai.site/g/326699/</span><br></pre></td></tr></table></figure></li><li><p>然后把文件拖到comic-cli里边就会自动把漫画转为mobi格式</p></li><li>如果没有生成则把<code>kindlegen.exe</code>放到<code>c:/windows</code>里再试试</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-09/WindowsTerminal_2020-09-05_12-04-06.png" alt="图文教程" title>                </div>                <div class="image-caption">图文教程</div>            </figure><h3 id="目前存在的问题"><a href="#目前存在的问题" class="headerlink" title="目前存在的问题"></a>目前存在的问题</h3><ul><li>转换工程文件到mobi格式时，可能失败，kindlegen没输出原因和错误内容，目前无法解决， 只能多次重试了。</li></ul><h3 id="其它工具"><a href="#其它工具" class="headerlink" title="其它工具"></a>其它工具</h3><ul><li><a href="https://ystyle.top/2019/12/31/txt-converto-epub-and-mobi/">txt文件转epub和mobi的工具TmdTextEpub和kaf</a></li><li>喵同人在线转换为mobi格式<a href="https://hcc.ystyle.top/" target="_blank" rel="noopener">hcc</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;转换在线漫画为mobi格式的工具&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;支持的网站&quot;&gt;&lt;a href=&quot;#支持的网站&quot; class=&quot;headerlink&quot; title=&quot;支持的网站&quot;&gt;&lt;/a&gt;支持的网站&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;动
      
    
    </summary>
    
      <category term="软件" scheme="http://ystyle.top/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="kindle" scheme="http://ystyle.top/tags/kindle/"/>
    
      <category term="mobi" scheme="http://ystyle.top/tags/mobi/"/>
    
      <category term="漫画" scheme="http://ystyle.top/tags/%E6%BC%AB%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>Linux kde文件管理器连接华为Share</title>
    <link href="http://ystyle.top/2020/09/03/kde-dolphin-smb/"/>
    <id>http://ystyle.top/2020/09/03/kde-dolphin-smb/</id>
    <published>2020-09-03T02:46:26.000Z</published>
    <updated>2020-09-03T02:46:26.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="华为手机设置"><a href="#华为手机设置" class="headerlink" title="华为手机设置"></a>华为手机设置</h3><ul><li>打开华为Share</li><li>长按华为Share图标进入华为分享</li><li>打开共享至电脑选项</li></ul><h3 id="Linux-设置"><a href="#Linux-设置" class="headerlink" title="Linux 设置"></a>Linux 设置</h3><ul><li><p>检查文件夹没有就创建一个</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/.smb</span><br><span class="line">vim ~/.smb/smb.conf</span><br></pre></td></tr></table></figure></li><li><p>然后在文件填写</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line">client min protocol = NT1</span><br></pre></td></tr></table></figure></li><li><p>打开Dolphin</p></li><li>选择网络在文件管理地址栏填写手机ip: <code>smb://192.168.3.129</code>  回车</li><li>在弹窗填写用户名和密码</li><li>右键添加到标签(下次直接在标签点击就能访问了)</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-09/2020-09-03_14-33.png" alt="访问华为Share" title>                </div>                <div class="image-caption">访问华为Share</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-09/2020-09-03_14-31.png" alt="修改标签名称" title>                </div>                <div class="image-caption">修改标签名称</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;华为手机设置&quot;&gt;&lt;a href=&quot;#华为手机设置&quot; class=&quot;headerlink&quot; title=&quot;华为手机设置&quot;&gt;&lt;/a&gt;华为手机设置&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;打开华为Share&lt;/li&gt;
&lt;li&gt;长按华为Share图标进入华为分享&lt;/li&gt;
&lt;li&gt;打开
      
    
    </summary>
    
      <category term="软件" scheme="http://ystyle.top/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="linux" scheme="http://ystyle.top/tags/linux/"/>
    
      <category term="kde" scheme="http://ystyle.top/tags/kde/"/>
    
      <category term="华为Share" scheme="http://ystyle.top/tags/%E5%8D%8E%E4%B8%BAShare/"/>
    
      <category term="Samba" scheme="http://ystyle.top/tags/Samba/"/>
    
  </entry>
  
  <entry>
    <title>Dokcer编译方舟引擎（MapleEngine）</title>
    <link href="http://ystyle.top/2020/07/21/dokcer-compile-maple-engine/"/>
    <id>http://ystyle.top/2020/07/21/dokcer-compile-maple-engine/</id>
    <published>2020-07-21T02:46:26.000Z</published>
    <updated>2020-08-06T07:08:26.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h3><ul><li><a href="https://gitee.com/harmonyos/OpenArkCompiler/issues/I1OHE5" target="_blank" rel="noopener">方舟引擎发布公告</a></li><li><a href="https://gitee.com/openarkcompiler-incubator/maple_engine" target="_blank" rel="noopener">官方文档 - 方舟引擎编译说明</a></li><li><a href="https://gitee.com/openarkcompiler-incubator/maple_engine/blob/master/maple_build/doc/build_OpenJDK8.md" target="_blank" rel="noopener">官方文档 - 构建Java 核心库</a></li></ul><h3 id="Docker-文件"><a href="#Docker-文件" class="headerlink" title="Docker 文件"></a>Docker 文件</h3><blockquote><p>复制到方舟引擎代码根目录, 文件名为Dockerfile</p></blockquote><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">16.04</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> https://www.openarkcompiler.cn</span><br><span class="line"></span><br><span class="line"><span class="comment"># Setting up the build environment</span></span><br><span class="line"><span class="keyword">RUN</span> sed -i 's/archive.ubuntu.com/mirrors.163.com/g' /etc/apt/sources.list &amp;&amp; \</span><br><span class="line">    apt-get -y update &amp;&amp; \</span><br><span class="line">    apt install --no-install-recommends -y build-essential git wget clang cmake libffi-dev libelf-dev libunwind-dev \</span><br><span class="line">        libssl-dev openjdk-8-jdk-headless unzip python-minimal python3 curl &amp;&amp; \</span><br><span class="line">    rm -rf /var/lib/apt/lists/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在国内请反注释下行, 因为容器也是个单独的系统，所以别用127.0.0.1</span></span><br><span class="line"><span class="comment">#ENV http_proxy=http://192.168.3.81:1081 \ </span></span><br><span class="line"><span class="comment">#    https_proxy=http://192.168.3.81:1081</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># copy source</span></span><br><span class="line"><span class="keyword">COPY</span> . /maple_engine</span><br><span class="line"><span class="keyword">WORKDIR</span> /maple_engine</span><br><span class="line"></span><br><span class="line"><span class="comment"># custom java/lang/Object.java</span></span><br><span class="line"><span class="keyword">RUN</span> cd /maple_engine/maple_build/jar/ &amp;&amp; \</span><br><span class="line">    bash -c "cp /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/&#123;rt.jar,jce.jar,jsse.jar,charsets.jar&#125; . " &amp;&amp; \</span><br><span class="line">    mkdir -p java/lang/ &amp;&amp; \</span><br><span class="line">    curl -L http://hg.openjdk.java.net/jdk8u/jdk8u/jdk/raw-file/jdk8u265-b01/src/share/classes/java/lang/Object.java &gt; java/lang/Object.java &amp;&amp; \</span><br><span class="line">    sed -i '/public class Object &#123;/a\long reserved_1; int reserved_2;' java/lang/Object.java &amp;&amp; \</span><br><span class="line">    javac -target 1.8 -g java/lang/Object.java &amp;&amp; \</span><br><span class="line">    jar uf rt.jar java/lang/Object.class &amp;&amp; \</span><br><span class="line">    rm -rf java</span><br><span class="line"></span><br><span class="line"><span class="comment"># compile</span></span><br><span class="line"><span class="keyword">RUN</span> bash -c "source ./envsetup.sh &amp;&amp; ./maple_build/tools/build-maple.sh &amp;&amp; ./maple_build/tools/build-libcore.sh &amp;&amp; rm -rf /maple_engine/maple_build/out/*"</span><br></pre></td></tr></table></figure><h3 id="编译方舟引擎"><a href="#编译方舟引擎" class="headerlink" title="编译方舟引擎"></a>编译方舟引擎</h3><blockquote><p>方舟编译器，也会一起编译，注意： 编译libjava时会占用25G左右的内存，不足25G建议添加swap分区</p></blockquote><blockquote><p>本人机器是16G内存，20G的SSD swap分区</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t ystyle/maple-engine .</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-07/44F09FD9B6FF040264D4D5D02EBD079E.jpg" alt="编译占用" title>                </div>                <div class="image-caption">编译占用</div>            </figure><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><blockquote><p><a href="https://hub.docker.com/r/ystyle/maple-engine" target="_blank" rel="noopener">镜像</a>已经推送到<a href="https://hub.docker.com/r/ystyle/maple-engine" target="_blank" rel="noopener">docker hub</a>, 可以直接使用下面的镜像编译hello world或其它软件</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm -ti ystyle/maple-engine bash</span><br><span class="line"># 设置基础环境</span><br><span class="line">source ./envsetup.sh</span><br><span class="line"># 编译java hello world</span><br><span class="line">cd ./maple_build/examples/HelloWorld</span><br><span class="line">$MAPLE_BUILD_TOOLS/java2asm.sh HelloWorld.java</span><br><span class="line"># 生成把.s文件编译为.so</span><br><span class="line">$MAPLE_BUILD_TOOLS/asm2so.sh HelloWorld.s</span><br><span class="line"># 运行软件</span><br><span class="line">$MAPLE_BUILD_TOOLS/run-app.sh -classpath ./HelloWorld.so HelloWorld</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-07/2020-07-22_10-35.png" alt="编译执行结果" title>                </div>                <div class="image-caption">编译执行结果</div>            </figure><h3 id="调试应用程序"><a href="#调试应用程序" class="headerlink" title="调试应用程序"></a>调试应用程序</h3><ul><li><a href="https://gitee.com/openarkcompiler-incubator/maple_engine/wikis/%E6%96%B9%E8%88%9F%E5%A4%9A%E8%AF%AD%E8%A8%80%E8%B0%83%E8%AF%95%E5%99%A8?sort_id=2711073" target="_blank" rel="noopener">方舟多语言调试器介绍</a></li><li><a href="https://gitee.com/openarkcompiler-incubator/maple_engine/tree/master/maple_debugger" target="_blank" rel="noopener">方舟多语言调试器项目说明</a></li><li><a href="https://gitee.com/openarkcompiler-incubator/maple_engine/blob/master/maple_debugger/UserReference.md" target="_blank" rel="noopener">方舟多语言调试器用户手册</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm -ti ystyle/maple-engine:gdb bash</span><br><span class="line"># 设置jdk源码路径 $JDK_SRC 为本地的openjdk源码</span><br><span class="line"># docker run --rm -ti -v $&#123;JDK_SRC&#125;:/root/my_openjdk8/jdk/src/ ystyle/maple-engine:gdb bash</span><br><span class="line"># 设置基础环境</span><br><span class="line">source ./envsetup.sh</span><br><span class="line"># 编译java hello world</span><br><span class="line">cd ./maple_build/examples/HelloWorld</span><br><span class="line">$MAPLE_BUILD_TOOLS/java2asm.sh HelloWorld.java</span><br><span class="line"># 生成把.s文件编译为.so</span><br><span class="line">$MAPLE_BUILD_TOOLS/asm2so.sh HelloWorld.s</span><br><span class="line"># 调试应用程序</span><br><span class="line">&quot;$MAPLE_BUILD_TOOLS&quot;/run-app.sh -gdb -classpath ./HelloWorld.so HelloWorld</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;文档&quot;&gt;&lt;a href=&quot;#文档&quot; class=&quot;headerlink&quot; title=&quot;文档&quot;&gt;&lt;/a&gt;文档&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gitee.com/harmonyos/OpenArkCompiler/issues/I1OH
      
    
    </summary>
    
      <category term="软件" scheme="http://ystyle.top/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="编译器" scheme="http://ystyle.top/tags/%E7%BC%96%E8%AF%91%E5%99%A8/"/>
    
      <category term="方舟" scheme="http://ystyle.top/tags/%E6%96%B9%E8%88%9F/"/>
    
      <category term="方舟多语言调试器" scheme="http://ystyle.top/tags/%E6%96%B9%E8%88%9F%E5%A4%9A%E8%AF%AD%E8%A8%80%E8%B0%83%E8%AF%95%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Windows右键菜单添以Window Terminal命令行打开文件</title>
    <link href="http://ystyle.top/2020/05/31/open-file-with-windows-terminal-command/"/>
    <id>http://ystyle.top/2020/05/31/open-file-with-windows-terminal-command/</id>
    <published>2020-05-31T14:11:48.000Z</published>
    <updated>2020-05-31T14:11:48.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>应用场景: 在文件右键打开windows terminal， 并在执行的命令中以选择的文件为参数运行。 </p></blockquote><blockquote><p>本示例为在windows terminal使用micro编辑器打开选中文件</p></blockquote><h3 id="先创建一个右键菜单项"><a href="#先创建一个右键菜单项" class="headerlink" title="先创建一个右键菜单项"></a>先创建一个右键菜单项</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\Open with Micro]</span><br><span class="line">&quot;Icon&quot;=&quot;E:\\Code\\Go\\bin\\micro-logo-mark.ico&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\Open with Micro\command]</span><br><span class="line">@=&quot;C:\\Users\\Administrator\\AppData\\Local\\Microsoft\\WindowsApps\\wt.exe new-tab -p \&quot;Windows PowerShell\&quot;  micro.exe \&quot;%1\&quot;&quot;</span><br></pre></td></tr></table></figure><h4 id="键的说明"><a href="#键的说明" class="headerlink" title="键的说明"></a>键的说明</h4><ul><li><code>[HKEY_CLASSES_ROOT\*\shell\Open with Micro]</code> 中的 <code>Open with Micro</code>为右键菜单名</li><li>Icon 是右键菜单项的图标</li><li>command 里的是菜单项点击后要执行的命令</li><li><code>wt.exe new-tab -p \&quot;Windows PowerShell\&quot;  micro.exe &#39;%1&#39;</code> <ul><li>wt 必需要写全路径，不写会弹出【选择打开文件需要的应用】那个窗口</li><li><code>new-tab</code> 是打开一个新的windows terminal 页签(不过在我电脑会打开新的一个应用实例)</li><li><code>-p \&quot;Windows PowerShell\&quot;</code> 是新页签需要用的的shell，可以是windows terminal的配置中的 name或guid</li><li><code>micro.exe \&quot;%1\&quot;</code> 是需要执行的命令， <code>\&quot;%1\&quot;</code>是当前右键的文件占位符</li></ul></li></ul><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-05/qimgv_2020-05-30_22-44-29.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-05/WindowsTerminal_2020-05-30_22-52-28.png" alt title>                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;应用场景: 在文件右键打开windows terminal， 并在执行的命令中以选择的文件为参数运行。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;本示例为在windows terminal使用micro编辑器打开选中文件
      
    
    </summary>
    
      <category term="系统" scheme="http://ystyle.top/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="windows" scheme="http://ystyle.top/tags/windows/"/>
    
      <category term="Window Terminal" scheme="http://ystyle.top/tags/Window-Terminal/"/>
    
  </entry>
  
  <entry>
    <title>uTorrent BT软件入门</title>
    <link href="http://ystyle.top/2020/04/25/getting-start-utorrent/"/>
    <id>http://ystyle.top/2020/04/25/getting-start-utorrent/</id>
    <published>2020-04-25T14:36:26.000Z</published>
    <updated>2020-04-25T14:36:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>软件设置并不能解决百分百的问题，BT是有死链的概念的，这种怎么设置都无法下载，还有些冷门内容速度慢是无法解决的，但大家可以尽量少用讯雷下载。 讯雷p2p只上传给自己的服务器，别的下载工具得不到p2p加速，并且还免费给讯雷做下载点</p></blockquote><blockquote><p>如果遇到喜欢的资源，想让更多的人知道、下载就多给种子挂【做种】吧，下载完后默认就开了的，建议分享率大于1时再关，有条件的可以一直挂着</p></blockquote><h3 id="全局设置"><a href="#全局设置" class="headerlink" title="全局设置"></a>全局设置</h3><ul><li><p>连接设置</p><ul><li>监听端口部分照着设置就行</li><li>代理服务器: 代理ip和端口看你用的代理工具，要勾上使用代理进行主机名查询<br><img src="https://dl.ystyle.top/images/2020-04/uTorrent_2020-04-25_21-59-01.png" alt></li></ul></li><li><p>任务设置</p><ul><li>DHT和UDP tracker一定要勾上</li><li>传出连接选择强制, 去掉[允许传入旧式中接]</li><li>建议按我的设置<br><img src="https://dl.ystyle.top/images/2020-04/uTorrent_2020-04-25_22-07-54.png" alt></li></ul></li><li><p>去广告</p><ul><li>把以下设置为false<ul><li>offers.sponsored_torrent_offer_enabled</li><li>offers.left_rail_offer_enabled</li><li>gui.show_plus_upsell<br><img src="https://dl.ystyle.top/images/2020-04/uTorrent_2020-04-25_22-11-06.png" alt></li></ul></li></ul></li></ul><h3 id="下载任务设置"><a href="#下载任务设置" class="headerlink" title="下载任务设置"></a>下载任务设置</h3><blockquote><p>主要是开DHT,和设置tracker, DHT开在连接上面的任务里说过了</p></blockquote><ul><li><p>Tracker是什么</p><blockquote><p>一般下载文件是用http/ftp/smb协议的域名或ip来明确指向文件存放在哪个IP的服务器上， 但BT是用识别码来标识文件，而没有明确的文件地址。 所以为了找到文件就需要有一个机制来确定目标文件在哪些机器上能下载到。 DHT和Tracker服务器都能做到文件寻址。</p></blockquote><ul><li>DHT: 是内嵌在BT软件里边的，会和电脑能识别并能连接上的BT网络进行数据交换和查询，从而找到文件需要到哪个IP去下载。</li><li>Tracker: 是运行在别人搭建好的服务器上，你只需要在下载时填写别人提供的Tracker连接就好了，BT软件会连接服务器进行文件查询并取到下载文件的IP地址</li></ul></li></ul><ul><li>设置Tracker<ul><li>在任务上右键-属性</li><li>打开<a href="https://github.com/ngosang/trackerslist" target="_blank" rel="noopener"><code>https://github.com/ngosang/trackerslist</code></a><ul><li>把 <code>trackers_best_ip.txt</code> 或 <code>trackers_all.txt</code> 的内容复制到tracker里</li><li>trackers_best_ip 如果部分tracker被墙了域名，可以用这个试试</li><li>trackers_all 一般是域名的，如果墙了域名的可能连接不上，破解方法在上面 【全局设置 - 连接设置 - 设置代理】</li><li>终极方法是启用全局代理，但梯子月费比较贵，流量也少，所以以上都用不了时才开来下载</li></ul></li><li>一般是勾上了DHT的，没有勾的，自行勾上<br><img src="https://dl.ystyle.top/images/2020-04/uTorrent_2020-04-25_22-12-56.png" alt></li></ul></li></ul><h3 id="制作种子或磁力链接"><a href="#制作种子或磁力链接" class="headerlink" title="制作种子或磁力链接"></a>制作种子或磁力链接</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-04/uTorrent_2020-04-25_22-26-24.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-04/uTorrent_2020-04-25_22-29-50.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>点击<code>文件-制作新的torrent</code> 或 工具栏 箭头那个图标</li><li>在选择源添加文件或目录</li><li>有必要时在Tracker里添加新的链接</li><li>勾选【开始做种】， 默认已经选上</li><li>点创建，选择种子保存位置， 这种子可以发给别人</li><li>生成磁力链接: 在【做种中】界面 右键任务 - 【复制Magnet链接】</li></ul><h3 id="边下边播功能"><a href="#边下边播功能" class="headerlink" title="边下边播功能"></a>边下边播功能</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-04/qimgv_2020-04-25_23-45-43.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>选择正在下载的任务</li><li>在下面板选择文件</li><li>在下载中的文件右键复制串流地址</li><li>打开其它支持播放url的播放器 打开这网址，就能实现边下边播放的功能了</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;软件设置并不能解决百分百的问题，BT是有死链的概念的，这种怎么设置都无法下载，还有些冷门内容速度慢是无法解决的，但大家可以尽量少用讯雷下载。 讯雷p2p只上传给自己的服务器，别的下载工具得不到p2p加速，并且还免费给讯雷做下载点&lt;/p&gt;
&lt;/blo
      
    
    </summary>
    
      <category term="软件" scheme="http://ystyle.top/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="uTorrent" scheme="http://ystyle.top/tags/uTorrent/"/>
    
      <category term="BT" scheme="http://ystyle.top/tags/BT/"/>
    
  </entry>
  
  <entry>
    <title>Windows Terminal 添加SSH到Tabs里</title>
    <link href="http://ystyle.top/2020/03/15/add-ssh-command-to-windows-terminal-tab/"/>
    <id>http://ystyle.top/2020/03/15/add-ssh-command-to-windows-terminal-tab/</id>
    <published>2020-03-15T06:46:26.000Z</published>
    <updated>2020-03-15T06:46:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>注意替换路径</p></blockquote><h3 id="用git-bash带的SSH"><a href="#用git-bash带的SSH" class="headerlink" title="用git-bash带的SSH"></a>用git-bash带的SSH</h3><blockquote><p>命令一定要用转义的双引号包起来, key的路径用git bash的路径方式，没key的话，删掉-i后面的就好，但每次都要输入密码. key登陆百度搜索SSH免密登陆</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"guid"</span>: <span class="string">"&#123;43d5c880-802b-42c7-aeaf-21b112a3569b&#125;"</span>,</span><br><span class="line">    <span class="attr">"name"</span>: <span class="string">"腾讯云"</span>,</span><br><span class="line">    <span class="attr">"icon"</span>:<span class="string">"E:\\Images\\tx.ico"</span>,</span><br><span class="line">    <span class="attr">"commandline"</span>: <span class="string">"E:\\Application\\Git\\bin\\bash.exe -c \"ssh ubuntu@140.143.205.68 -i /e/Code/Docker/tx.key\""</span>,</span><br><span class="line">    <span class="attr">"useAcrylic"</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"acrylicOpacity"</span>: <span class="number">0.75</span>,</span><br><span class="line">    <span class="attr">"backgroundImage"</span> : <span class="string">"E:\\Images\\壁纸\\03.jpg"</span>,</span><br><span class="line">    <span class="attr">"backgroundImageOpacity"</span> : <span class="number">0.5</span>,</span><br><span class="line">    <span class="attr">"startingDirectory"</span>: <span class="string">"./"</span>,</span><br><span class="line">    <span class="attr">"scrollbarState"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"hidden"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="用Power-Shell自带的SSH"><a href="#用Power-Shell自带的SSH" class="headerlink" title="用Power Shell自带的SSH"></a>用Power Shell自带的SSH</h3><blockquote><p>基本是一样的，但key的目录必需在当前用户的主目录下，路径是windwos的标准格式</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   <span class="comment">// Make changes here to the powershell.exe profile</span></span><br><span class="line">   <span class="attr">"guid"</span>: <span class="string">"&#123;61c54bbd-c2c6-5271-96e7-009a87ff44ba&#125;"</span>,</span><br><span class="line">   <span class="attr">"name"</span>: <span class="string">"腾讯云"</span>,</span><br><span class="line">   <span class="attr">"icon"</span>:<span class="string">"E:\\Images\\tx.ico"</span>,</span><br><span class="line">   <span class="attr">"commandline"</span>: <span class="string">"powershell.exe -c \"ssh ubuntu@140.143.205.68 -i C:/Users/Administrator/tx.key\""</span>,</span><br><span class="line">   <span class="attr">"useAcrylic"</span>:<span class="literal">true</span>,</span><br><span class="line">   <span class="attr">"acrylicOpacity"</span>: <span class="number">0.75</span>,</span><br><span class="line">   <span class="attr">"backgroundImage"</span> : <span class="string">"E:\\Images\\壁纸\\03.jpg"</span>,</span><br><span class="line">   <span class="attr">"backgroundImageOpacity"</span> : <span class="number">0.5</span>,</span><br><span class="line">   <span class="attr">"startingDirectory"</span>: <span class="string">"./"</span>,</span><br><span class="line">   <span class="attr">"scrollbarState"</span>: <span class="literal">false</span>,</span><br><span class="line">   <span class="attr">"background"</span>: <span class="string">"#0000FF"</span>,</span><br><span class="line">   <span class="attr">"hidden"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="添加右键菜单-在任意地方打开Window-Terminal"><a href="#添加右键菜单-在任意地方打开Window-Terminal" class="headerlink" title="添加右键菜单-在任意地方打开Window Terminal"></a>添加右键菜单-在任意地方打开Window Terminal</h3><blockquote><p><a href="https://raw.githubusercontent.com/microsoft/terminal/master/res/terminal.ico" target="_blank" rel="noopener">图标下载</a></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\wt]</span><br><span class="line">@=&quot;Windows Terminal here&quot;</span><br><span class="line">&quot;Icon&quot;=&quot;\&quot;E:\\Images\\terminal.ico\&quot;&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\wt\command]</span><br><span class="line">@=&quot;C:\\Users\\Administrator\\AppData\\Local\\Microsoft\\WindowsApps\\wt.exe&quot;</span><br></pre></td></tr></table></figure><h3 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-03/WindowsTerminal_2020-03-15_16-55-40.png" alt title>                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;注意替换路径&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;用git-bash带的SSH&quot;&gt;&lt;a href=&quot;#用git-bash带的SSH&quot; class=&quot;headerlink&quot; title=&quot;用git-bash带的SSH&quot;&gt;&lt;/a&gt;用gi
      
    
    </summary>
    
      <category term="软件" scheme="http://ystyle.top/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="SSH" scheme="http://ystyle.top/tags/SSH/"/>
    
      <category term="terminal" scheme="http://ystyle.top/tags/terminal/"/>
    
  </entry>
  
  <entry>
    <title>KDE添加右键菜单</title>
    <link href="http://ystyle.top/2020/02/21/add-custom-context-menu-to-kde-dolphin/"/>
    <id>http://ystyle.top/2020/02/21/add-custom-context-menu-to-kde-dolphin/</id>
    <published>2020-02-21T07:11:48.000Z</published>
    <updated>2020-02-21T07:11:48.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="文件存放位置"><a href="#文件存放位置" class="headerlink" title="文件存放位置"></a>文件存放位置</h3><ul><li>位置<ul><li><code>$HOME/.local/share/kservices5/</code></li><li><code>/usr/share/kservices5/</code></li></ul></li><li>文件后缀: <code>.desktop</code></li></ul><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[Desktop Entry]</span><br><span class="line">Actions=OptimisePNG;</span><br><span class="line">MimeType=image/png;</span><br><span class="line">Type=Service</span><br><span class="line">X-KDE-ServiceTypes=KonqPopupMenu/Plugin</span><br><span class="line">Icon=tools-wizard.png</span><br><span class="line"></span><br><span class="line">[Desktop Action OptimisePNG]</span><br><span class="line">Name=Optimise PNG Image</span><br><span class="line">Icon=tools-wizard.png</span><br><span class="line">Exec=optipng -o7 %f</span><br></pre></td></tr></table></figure><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><ul><li>[Desktop Entry]<ul><li><code>Actions</code>: 在该菜单中的菜单项，多个用英文分号隔开</li><li><code>MimeType</code>: 在指定的文件类型中启动该菜单<ul><li><code>inode/directory</code> 在目录中启用</li><li><code>image/png</code> 只在png图片启用</li><li><code>all/allfiles</code>在所有文件中启用（不包括文件夹）</li><li><code>image/allfiles</code> 在所有图片启用</li></ul></li><li>Type=Service: 表示服务，不会在开始菜单中显示， 改为Application表示应用，会显示在开始菜单</li><li><code>X-KDE-ServiceTypes=KonqPopupMenu/Plugin</code>: 只在kde中支持，  表示显示在<code>右键-动作</code>下边</li><li><code>X-KDE-Priority=TopLevel</code> 表示显示在顶级菜单中，右键直接显示</li><li><code>Icon</code> Type=Service 时图标不会显示</li></ul></li><li>[Desktop Action OptimisePNG]<ul><li><code>OptimisePNG</code>为自定义的动作，填写在上边的<code>Actions</code>里</li><li><code>Name</code>菜单项名称</li><li><code>Icon</code>菜单显示图标</li><li><code>Exec</code>点击菜单时执行的命令<ul><li>%f 文件列表。用于可一次打开多个本地文件的应用程序。每个文件都作为单独的参数传递给可执行程序。</li><li>%F 即使选择了多个文件，也只有一个文件名（包括路径）。读取桌面条目的系统应认识到所讨论的程序无法处理多个文件参数，并且如果该程序无法处理其他文件参数，则应该为每个选定文件生成并执行该程序的多个副本。如果文件不在本地文件系统上（即，在HTTP或FTP位置），则文件将被复制到本地文件系统，%f并将展开以指向临时文件。用于不了解URL语法的程序。</li></ul></li><li><code>[Desktop Action XXXX]</code> 的条目在一个文件中可以有多个</li></ul></li><li>如果新建无误后显示不出来的话， 执行一下<code>kbuildsycoca5</code>如果有错误会有提示`</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;文件存放位置&quot;&gt;&lt;a href=&quot;#文件存放位置&quot; class=&quot;headerlink&quot; title=&quot;文件存放位置&quot;&gt;&lt;/a&gt;文件存放位置&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;位置&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$HOME/.local/share/kservices5/&lt;
      
    
    </summary>
    
      <category term="系统" scheme="http://ystyle.top/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="http://ystyle.top/tags/linux/"/>
    
      <category term="kde" scheme="http://ystyle.top/tags/kde/"/>
    
  </entry>
  
  <entry>
    <title>txt小说转epub与mobi</title>
    <link href="http://ystyle.top/2019/12/31/txt-converto-epub-and-mobi/"/>
    <id>http://ystyle.top/2019/12/31/txt-converto-epub-and-mobi/</id>
    <published>2019-12-31T05:02:49.000Z</published>
    <updated>2020-03-24T05:02:49.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>把txt文本转成epub、mobi电子书的工具, 支持电脑和安卓APP</p></blockquote><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul><li><a href="https://github.com/ystyle/TmdTextEpub/releases/latest" target="_blank" rel="noopener">点击下载</a><ul><li><a href="https://pan.baidu.com/s/1EPkLJ7WIJYdYtRHBEMqw0w" target="_blank" rel="noopener">百度网盘 <code>https://pan.baidu.com/s/1EPkLJ7WIJYdYtRHBEMqw0w</code></a> 提取码：<code>h4np</code></li></ul></li></ul><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><table><thead><tr><th style="text-align:left">功能</th><th style="text-align:left">TmdTextEpub</th><th style="text-align:left">KAF</th></tr></thead><tbody><tr><td style="text-align:left">支持平台</td><td style="text-align:left">windows、linux、mac</td><td style="text-align:left">Android</td></tr><tr><td style="text-align:left">自动识别书名和章节</td><td style="text-align:left">支持</td><td style="text-align:left">支持</td></tr><tr><td style="text-align:left">自动识别字符编码(自动解决中文乱码)</td><td style="text-align:left">支持</td><td style="text-align:left">支持</td></tr><tr><td style="text-align:left">自动给章节正文生成加粗居中的标题</td><td style="text-align:left">支持</td><td style="text-align:left">支持</td></tr><tr><td style="text-align:left">段落自动识别</td><td style="text-align:left">支持</td><td style="text-align:left">支持</td></tr><tr><td style="text-align:left">段落自动缩进</td><td style="text-align:left">支持</td><td style="text-align:left">支持</td></tr><tr><td style="text-align:left">自定义书名作者</td><td style="text-align:left">支持</td><td style="text-align:left">支持</td></tr><tr><td style="text-align:left">自定义章节标题识别规则</td><td style="text-align:left">支持</td><td style="text-align:left">支持</td></tr><tr><td style="text-align:left">自定义章节标题对齐方式</td><td style="text-align:left"></td><td style="text-align:left">支持</td></tr><tr><td style="text-align:left">自定义段落缩进字数</td><td style="text-align:left"></td><td style="text-align:left">支持</td></tr><tr><td style="text-align:left">WIFI传书</td><td style="text-align:left"></td><td style="text-align:left">支持</td></tr></tbody></table><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ul><li>电脑版<ol><li>解压, 把小说直接拖到 <code>TmdTextEpub.exe</code> 文件上面</li><li>等转换完，目录下会生成epub和mobi文件</li><li>如果没有生成mobi，则复制<code>kindlegen</code>到<code>C:\windows</code>下面，重试</li></ol></li><li>安卓版<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-03/kaf1.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-03/kaf2.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-03/kaf5.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-03/kaf6.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://github.com/ystyle/TmdTextEpub/raw/master/2020-01-21_12-02.png" alt="异常生物见闻录" title>                </div>                <div class="image-caption">异常生物见闻录</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2020-03/550b751ed21b0ef466cae53fcac451da80cb3efe.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="手动把书转为kindle的mobi格式"><a href="#手动把书转为kindle的mobi格式" class="headerlink" title="手动把书转为kindle的mobi格式"></a>手动把书转为kindle的mobi格式</h3><blockquote><p>新版如果检测到有kindlegen程序时会自动转为mobi</p></blockquote><ol><li>在官网下载<a href="https://www.amazon.com/gp/feature.html?ie=UTF8&amp;docId=1000765211" target="_blank" rel="noopener">kindlegen</a></li><li><p>同样放到<code>d:</code>盘根目录下， 执行以下命令转换</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd d:/</span><br><span class="line">d:/kindlegen.exe d:/全职法师.epub</span><br></pre></td></tr></table></figure></li><li><p>在d盘就能找到mobi文件了，复制到kindle的documents目录下，打开kindle就能看到小说了</p></li></ol><h3 id="命令行模式"><a href="#命令行模式" class="headerlink" title="命令行模式"></a>命令行模式</h3><p>命令行全部参数为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Usage of D:\TmdTextEpub.exe:</span><br><span class="line">  -author string</span><br><span class="line">        作者 (default &quot;YSTYLE&quot;)</span><br><span class="line">  -bookname string</span><br><span class="line">        书名: 默认为txt文件名</span><br><span class="line">  -filename string</span><br><span class="line">        txt 文件名</span><br><span class="line">  -match string</span><br><span class="line">        匹配标题的正则表达式, 不写可以自动识别, 如果没生成章节就参考教程。例: -match 第.&#123;1,8&#125;章 表示第和章字之间可以有1-8个任意文字 (default &quot;自动匹配,可自定义&quot;)</span><br><span class="line">  -tips</span><br><span class="line">        添加本软件教程 (default true)</span><br></pre></td></tr></table></figure></p><h3 id="在任意位置执行命令"><a href="#在任意位置执行命令" class="headerlink" title="在任意位置执行命令"></a>在任意位置执行命令</h3><ol><li>把<code>TmdTextEpub.exe</code> 和 <code>kindlegen.exe</code> 放<code>c:/windows/</code>下边</li><li>上面第1步只需要做一次，以后可以把小说放任意目录，都可以很简单执行转换，每次转换小说的按下面操作，<ul><li>打开小说在的文件夹, 按住<code>Shift键</code>不放，鼠标右击文件夹空白位置</li><li>在右键菜单选择 <code>用命令行打开</code> 或 <code>以PowerShell打开</code></li><li>执行<code>TmdTextEpub.exe -filename 异常生物见闻录.txt</code>,  现在可以不用写盘符了</li></ul></li></ol><p>把<code>全职法师.txt</code>生成epub, 并设置作者名为<code>乱</code><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd d:/</span><br><span class="line">d:/TmdTextEpub.exe -author 乱 -filename d:/全职法师.txt</span><br></pre></td></tr></table></figure></p><blockquote><p>以下全部示例都可以自动识别，不需要自己设定标题格式了， 一般用上用上面的例子就行了</p></blockquote><blockquote><p>要自定义标题格式参考以下几个例子</p></blockquote><p>自定义章节匹配, 章节格式为<code>第x节</code>:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd d:/</span><br><span class="line">d:/TmdTextEpub.exe -filename d:/ebbok.txt -match "第.&#123;1,8&#125;节"</span><br></pre></td></tr></table></figure></p><p>自定义章节匹配, 章节格式为<code>Section 1</code> ~ <code>Section 100</code>:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd d:/</span><br><span class="line">d:/TmdTextEpub.exe -filename d:/ebbok.txt -match "Section \d+"</span><br></pre></td></tr></table></figure></p><p>自定义章节匹配, 章节格式为<code>Chapter xxx</code>:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd d:/</span><br><span class="line">d:/TmdTextEpub.exe -filename d:/ebbok.txt -match "Chapter .&#123;1,8&#125;"</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;把txt文本转成epub、mobi电子书的工具, 支持电脑和安卓APP&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;下载&quot;&gt;&lt;a href=&quot;#下载&quot; class=&quot;headerlink&quot; title=&quot;下载&quot;&gt;&lt;/a&gt;下载&lt;/h3&gt;&lt;ul
      
    
    </summary>
    
      <category term="软件" scheme="http://ystyle.top/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="小说" scheme="http://ystyle.top/tags/%E5%B0%8F%E8%AF%B4/"/>
    
      <category term="kindle" scheme="http://ystyle.top/tags/kindle/"/>
    
      <category term="epub" scheme="http://ystyle.top/tags/epub/"/>
    
      <category term="mobi" scheme="http://ystyle.top/tags/mobi/"/>
    
  </entry>
  
  <entry>
    <title>嵌入式数据库storm的使用</title>
    <link href="http://ystyle.top/2019/12/22/how-to-use-storm-db/"/>
    <id>http://ystyle.top/2019/12/22/how-to-use-storm-db/</id>
    <published>2019-12-22T06:46:26.000Z</published>
    <updated>2020-09-25T07:11:48.739Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>storm是一个使用BoltDB的上层orm框架</p></blockquote><h3 id="地址"><a href="#地址" class="headerlink" title="地址:"></a>地址:</h3><ul><li><a href="https://github.com/br0xen/boltbrowser" target="_blank" rel="noopener">数据查看工具</a>: <a href="https://github.com/br0xen/boltbrowser" target="_blank" rel="noopener">https://github.com/br0xen/boltbrowser</a></li><li><a href="https://github.com/asdine/storm" target="_blank" rel="noopener">驱动</a>: <a href="https://github.com/asdine/storm" target="_blank" rel="noopener">https://github.com/asdine/storm</a></li></ul><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db, err := storm.Open(<span class="string">"my.db"</span>)</span><br><span class="line"><span class="keyword">defer</span> db.Close()</span><br></pre></td></tr></table></figure><h3 id="定义对象模型"><a href="#定义对象模型" class="headerlink" title="定义对象模型"></a>定义对象模型</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">  ID <span class="keyword">int</span> <span class="comment">// primary key</span></span><br><span class="line">  Group <span class="keyword">string</span> <span class="string">`storm:"index"`</span> <span class="comment">// this field will be indexed</span></span><br><span class="line">  Email <span class="keyword">string</span> <span class="string">`storm:"unique"`</span> <span class="comment">// this field will be indexed with a unique constraint</span></span><br><span class="line">  Name <span class="keyword">string</span> <span class="comment">// this field will not be indexed</span></span><br><span class="line">  Age <span class="keyword">int</span> <span class="string">`storm:"index"`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>自增可以在主键上添加tag: <code>storm:&quot;id,increment=2&quot;</code> =2是自增步长</p></blockquote><h3 id="保存数据"><a href="#保存数据" class="headerlink" title="保存数据"></a>保存数据</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">user := User&#123;</span><br><span class="line">  ID: <span class="number">10</span>,</span><br><span class="line">  Group: <span class="string">"staff"</span>,</span><br><span class="line">  Email: <span class="string">"john@provider.com"</span>,</span><br><span class="line">  Name: <span class="string">"John"</span>,</span><br><span class="line">  Age: <span class="number">21</span>,</span><br><span class="line">  CreatedAt: time.Now(),</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err := db.Save(&amp;user)</span><br><span class="line"><span class="comment">// err == nil</span></span><br><span class="line"></span><br><span class="line">user.ID++</span><br><span class="line">err = db.Save(&amp;user)</span><br><span class="line"><span class="comment">// err == storm.ErrAlreadyExists</span></span><br></pre></td></tr></table></figure><h3 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Update multiple fields</span></span><br><span class="line">err := db.Update(&amp;User&#123;ID: <span class="number">10</span>, Name: <span class="string">"Jack"</span>, Age: <span class="number">45</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Update a single field</span></span><br><span class="line">err := db.UpdateField(&amp;User&#123;ID: <span class="number">10</span>&#125;, <span class="string">"Age"</span>, <span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">err := db.DeleteStruct(&amp;user)</span><br></pre></td></tr></table></figure><h3 id="表管理操作"><a href="#表管理操作" class="headerlink" title="表管理操作"></a>表管理操作</h3><ul><li>初始化索引 <code>err := db.Init(&amp;User{})</code></li><li>重建索引: <code>err := db.ReIndex(&amp;User{})</code></li><li>删表: <code>err := db.Drop(&amp;User)</code> 或 <code>err := db.Drop(&quot;User&quot;)</code></li></ul><h3 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> user User</span><br><span class="line">err := db.One(<span class="string">"Email"</span>, <span class="string">"john@provider.com"</span>, &amp;user)</span><br><span class="line"><span class="comment">// err == nil</span></span><br><span class="line"></span><br><span class="line">err = db.One(<span class="string">"Name"</span>, <span class="string">"John"</span>, &amp;user)</span><br><span class="line"><span class="comment">// err == nil</span></span><br><span class="line"></span><br><span class="line">err = db.One(<span class="string">"Name"</span>, <span class="string">"Jack"</span>, &amp;user)</span><br><span class="line"><span class="comment">// err == storm.ErrNotFound</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Fetch multiple objects</span></span><br><span class="line"><span class="keyword">var</span> users []User</span><br><span class="line">err := db.Find(<span class="string">"Group"</span>, <span class="string">"staff"</span>, &amp;users)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fetch all objects</span></span><br><span class="line"><span class="keyword">var</span> users []User</span><br><span class="line">err := db.All(&amp;users)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fetch all objects sorted by index</span></span><br><span class="line"><span class="keyword">var</span> users []User</span><br><span class="line">err := db.AllByIndex(<span class="string">"CreatedAt"</span>, &amp;users)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fetch a range of objects</span></span><br><span class="line"><span class="keyword">var</span> users []User</span><br><span class="line">err := db.Range(<span class="string">"Age"</span>, <span class="number">10</span>, <span class="number">21</span>, &amp;users)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fetch objects by prefix</span></span><br><span class="line"><span class="keyword">var</span> users []User</span><br><span class="line">err := db.Prefix(<span class="string">"Name"</span>, <span class="string">"Jo"</span>, &amp;users)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Skip, Limit and Reverse</span></span><br><span class="line"><span class="keyword">var</span> users []User</span><br><span class="line">err := db.Find(<span class="string">"Group"</span>, <span class="string">"staff"</span>, &amp;users, storm.Skip(<span class="number">10</span>))</span><br><span class="line">err = db.Find(<span class="string">"Group"</span>, <span class="string">"staff"</span>, &amp;users, storm.Limit(<span class="number">10</span>))</span><br><span class="line">err = db.Find(<span class="string">"Group"</span>, <span class="string">"staff"</span>, &amp;users, storm.Reverse())</span><br><span class="line">err = db.Find(<span class="string">"Group"</span>, <span class="string">"staff"</span>, &amp;users, storm.Limit(<span class="number">10</span>), storm.Skip(<span class="number">10</span>), storm.Reverse())</span><br><span class="line"></span><br><span class="line">err = db.All(&amp;users, storm.Limit(<span class="number">10</span>), storm.Skip(<span class="number">10</span>), storm.Reverse())</span><br><span class="line">err = db.AllByIndex(<span class="string">"CreatedAt"</span>, &amp;users, storm.Limit(<span class="number">10</span>), storm.Skip(<span class="number">10</span>), storm.Reverse())</span><br><span class="line">err = db.Range(<span class="string">"Age"</span>, <span class="number">10</span>, <span class="number">21</span>, &amp;users, storm.Limit(<span class="number">10</span>), storm.Skip(<span class="number">10</span>), storm.Reverse())</span><br></pre></td></tr></table></figure><h3 id="高级查询"><a href="#高级查询" class="headerlink" title="高级查询"></a>高级查询</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Equality</span></span><br><span class="line">q.Eq(<span class="string">"Name"</span>, John)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Strictly greater than</span></span><br><span class="line">q.Gt(<span class="string">"Age"</span>, <span class="number">7</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Lesser than or equal to</span></span><br><span class="line">q.Lte(<span class="string">"Age"</span>, <span class="number">77</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Regex with name that starts with the letter D</span></span><br><span class="line">q.Re(<span class="string">"Name"</span>, <span class="string">"^D"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// In the given slice of values</span></span><br><span class="line">q.In(<span class="string">"Group"</span>, []<span class="keyword">string</span>&#123;<span class="string">"Staff"</span>, <span class="string">"Admin"</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Comparing fields</span></span><br><span class="line">q.EqF(<span class="string">"FieldName"</span>, <span class="string">"SecondFieldName"</span>)</span><br><span class="line">q.LtF(<span class="string">"FieldName"</span>, <span class="string">"SecondFieldName"</span>)</span><br><span class="line">q.GtF(<span class="string">"FieldName"</span>, <span class="string">"SecondFieldName"</span>)</span><br><span class="line">q.LteF(<span class="string">"FieldName"</span>, <span class="string">"SecondFieldName"</span>)</span><br><span class="line">q.GteF(<span class="string">"FieldName"</span>, <span class="string">"SecondFieldName"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Match if all match</span></span><br><span class="line">q.And(</span><br><span class="line">  q.Gt(<span class="string">"Age"</span>, <span class="number">7</span>),</span><br><span class="line">  q.Re(<span class="string">"Name"</span>, <span class="string">"^D"</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Matchers can also be combined with And, Or and Not:</span></span><br><span class="line"><span class="comment">// Match if one matches</span></span><br><span class="line">q.Or(</span><br><span class="line">  q.Re(<span class="string">"Name"</span>, <span class="string">"^A"</span>),</span><br><span class="line">  q.Not(</span><br><span class="line">    q.Re(<span class="string">"Name"</span>, <span class="string">"^B"</span>)</span><br><span class="line">  ),</span><br><span class="line">  q.Re(<span class="string">"Name"</span>, <span class="string">"^C"</span>),</span><br><span class="line">  q.In(<span class="string">"Group"</span>, []<span class="keyword">string</span>&#123;<span class="string">"Staff"</span>, <span class="string">"Admin"</span>&#125;),</span><br><span class="line">  q.And(</span><br><span class="line">    q.StrictEq(<span class="string">"Password"</span>, []<span class="keyword">byte</span>(password)),</span><br><span class="line">    q.Eq(<span class="string">"Registered"</span>, <span class="literal">true</span>)</span><br><span class="line">  )</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">query := db.Select(q.Gte(<span class="string">"Age"</span>, <span class="number">7</span>), q.Lte(<span class="string">"Age"</span>, <span class="number">77</span>))</span><br><span class="line"><span class="comment">// Calls can also be chained</span></span><br><span class="line">query = query.Limit(<span class="number">10</span>).Skip(<span class="number">20</span>).OrderBy(<span class="string">"Age"</span>).Reverse()</span><br><span class="line"></span><br><span class="line"><span class="comment">// But also to specify how to fetch them.</span></span><br><span class="line"><span class="keyword">var</span> users []User</span><br><span class="line">err = query.Find(&amp;users)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> user User</span><br><span class="line">err = query.First(&amp;user)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// demo</span></span><br><span class="line"><span class="comment">// Examples with Select:</span></span><br><span class="line"></span><br><span class="line">/ Find all users with an ID between <span class="number">10</span> and <span class="number">100</span></span><br><span class="line">err = db.Select(q.Gte(<span class="string">"ID"</span>, <span class="number">10</span>), q.Lte(<span class="string">"ID"</span>, <span class="number">100</span>)).Find(&amp;users)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Nested matchers</span></span><br><span class="line">err = db.Select(q.Or(</span><br><span class="line">  q.Gt(<span class="string">"ID"</span>, <span class="number">50</span>),</span><br><span class="line">  q.Lt(<span class="string">"Age"</span>, <span class="number">21</span>),</span><br><span class="line">  q.And(</span><br><span class="line">    q.Eq(<span class="string">"Group"</span>, <span class="string">"admin"</span>),</span><br><span class="line">    q.Gte(<span class="string">"Age"</span>, <span class="number">21</span>),</span><br><span class="line">  ),</span><br><span class="line">)).Find(&amp;users)</span><br><span class="line"></span><br><span class="line">query := db.Select(q.Gte(<span class="string">"ID"</span>, <span class="number">10</span>), q.Lte(<span class="string">"ID"</span>, <span class="number">100</span>)).Limit(<span class="number">10</span>).Skip(<span class="number">5</span>).Reverse().OrderBy(<span class="string">"Age"</span>, <span class="string">"Name"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Find multiple records</span></span><br><span class="line">err = query.Find(&amp;users)</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line">err = db.Select(q.Gte(<span class="string">"ID"</span>, <span class="number">10</span>), q.Lte(<span class="string">"ID"</span>, <span class="number">100</span>)).Limit(<span class="number">10</span>).Skip(<span class="number">5</span>).Reverse().OrderBy(<span class="string">"Age"</span>, <span class="string">"Name"</span>).Find(&amp;users)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Find first record</span></span><br><span class="line">err = query.First(&amp;user)</span><br><span class="line"><span class="comment">// or</span></span><br><span class="line">err = db.Select(q.Gte(<span class="string">"ID"</span>, <span class="number">10</span>), q.Lte(<span class="string">"ID"</span>, <span class="number">100</span>)).Limit(<span class="number">10</span>).Skip(<span class="number">5</span>).Reverse().OrderBy(<span class="string">"Age"</span>, <span class="string">"Name"</span>).First(&amp;user)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Delete all matching records</span></span><br><span class="line">err = query.Delete(<span class="built_in">new</span>(User))</span><br><span class="line"></span><br><span class="line"><span class="comment">// Fetching records one by one (useful when the bucket contains a lot of records)</span></span><br><span class="line">query = db.Select(q.Gte(<span class="string">"ID"</span>, <span class="number">10</span>),q.Lte(<span class="string">"ID"</span>, <span class="number">100</span>)).OrderBy(<span class="string">"Age"</span>, <span class="string">"Name"</span>)</span><br><span class="line"></span><br><span class="line">err = query.Each(<span class="built_in">new</span>(User), <span class="function"><span class="keyword">func</span><span class="params">(record <span class="keyword">interface</span>&#123;&#125;)</span> <span class="title">error</span>)</span> &#123;</span><br><span class="line">  u := record.(*User)</span><br><span class="line">  ...</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">tx, err := db.Begin(<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> tx.Rollback()</span><br><span class="line"></span><br><span class="line">accountA.Amount -= <span class="number">100</span></span><br><span class="line">accountB.Amount += <span class="number">100</span></span><br><span class="line"></span><br><span class="line">err = tx.Save(accountA)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">err = tx.Save(accountB)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> tx.Commit()</span><br></pre></td></tr></table></figure><h3 id="不同的数据编码方式"><a href="#不同的数据编码方式" class="headerlink" title="不同的数据编码方式"></a>不同的数据编码方式</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> (</span><br><span class="line">  <span class="string">"github.com/asdine/storm/v3"</span></span><br><span class="line">  <span class="string">"github.com/asdine/storm/v3/codec/gob"</span></span><br><span class="line">  <span class="string">"github.com/asdine/storm/v3/codec/json"</span></span><br><span class="line">  <span class="string">"github.com/asdine/storm/v3/codec/sereal"</span></span><br><span class="line">  <span class="string">"github.com/asdine/storm/v3/codec/protobuf"</span></span><br><span class="line">  <span class="string">"github.com/asdine/storm/v3/codec/msgpack"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> gobDb, _ = storm.Open(<span class="string">"gob.db"</span>, storm.Codec(gob.Codec))</span><br><span class="line"><span class="keyword">var</span> jsonDb, _ = storm.Open(<span class="string">"json.db"</span>, storm.Codec(json.Codec))</span><br><span class="line"><span class="keyword">var</span> serealDb, _ = storm.Open(<span class="string">"sereal.db"</span>, storm.Codec(sereal.Codec))</span><br><span class="line"><span class="keyword">var</span> protobufDb, _ = storm.Open(<span class="string">"protobuf.db"</span>, storm.Codec(protobuf.Codec))</span><br><span class="line"><span class="keyword">var</span> msgpackDb, _ = storm.Open(<span class="string">"msgpack.db"</span>, storm.Codec(msgpack.Codec))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;storm是一个使用BoltDB的上层orm框架&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;地址&quot;&gt;&lt;a href=&quot;#地址&quot; class=&quot;headerlink&quot; title=&quot;地址:&quot;&gt;&lt;/a&gt;地址:&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a 
      
    
    </summary>
    
      <category term="软件" scheme="http://ystyle.top/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="BoltDB" scheme="http://ystyle.top/tags/BoltDB/"/>
    
      <category term="storm" scheme="http://ystyle.top/tags/storm/"/>
    
      <category term="go" scheme="http://ystyle.top/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>kde在更新系统后不想重启怎么办</title>
    <link href="http://ystyle.top/2019/12/12/donot-restart-kde-after-update-system/"/>
    <id>http://ystyle.top/2019/12/12/donot-restart-kde-after-update-system/</id>
    <published>2019-12-12T07:24:26.000Z</published>
    <updated>2020-04-13T07:24:26.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>用Archlinux经常更新系统， 如果遇到kde更新了的话，不重启系统的话很多kde的应用会打不开， 如果不想重启系统应该怎么办？</p></blockquote><h3 id="不重启系统情况下重启KDE5"><a href="#不重启系统情况下重启KDE5" class="headerlink" title="不重启系统情况下重启KDE5"></a>不重启系统情况下重启KDE5</h3><p>在更新系统完成后输入:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> kquitapp5 plasmashell &amp;&amp; kstart5 plasmashell</span><br></pre></td></tr></table></figure></p><p>太长了不好记建议在.zshrc添加以下内容:<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias kr="kquitapp5 plasmashell &amp;&amp; kstart5 plasmashell"</span><br></pre></td></tr></table></figure></p><p>以后更新完后输入<code>kr</code>就好了， kde重启后还会有日志输出，直接把终端关了就好了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;用Archlinux经常更新系统， 如果遇到kde更新了的话，不重启系统的话很多kde的应用会打不开， 如果不想重启系统应该怎么办？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;不重启系统情况下重启KDE5&quot;&gt;&lt;a href=&quot;#不重启系统
      
    
    </summary>
    
      <category term="系统" scheme="http://ystyle.top/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Linux" scheme="http://ystyle.top/tags/Linux/"/>
    
      <category term="KDE" scheme="http://ystyle.top/tags/KDE/"/>
    
      <category term="Archlinux" scheme="http://ystyle.top/tags/Archlinux/"/>
    
  </entry>
  
  <entry>
    <title>方舟编译器使用测试</title>
    <link href="http://ystyle.top/2019/09/06/ark-test-axample/"/>
    <id>http://ystyle.top/2019/09/06/ark-test-axample/</id>
    <published>2019-09-06T12:23:21.000Z</published>
    <updated>2020-09-25T07:11:48.739Z</updated>
    
    <content type="html"><![CDATA[<h1 id="方舟编译器编译过程"><a href="#方舟编译器编译过程" class="headerlink" title="方舟编译器编译过程"></a>方舟编译器编译过程</h1><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol><li><a href="https://gitee.com/mirrors/java-core" target="_blank" rel="noopener">下载java-core.jar</a></li><li>需要安装docker</li><li>docker镜像 <code>daocloud.io/ystyle/ark</code> <a href="https://ystyle.top/2019/09/06/compile-ark/">方舟镜像编译教程</a></li></ol><h3 id="准备java代码"><a href="#准备java代码" class="headerlink" title="准备java代码"></a>准备java代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"hello world"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 进入docker容器的交互模式</span><br><span class="line">docker run --rm -v -ti $PWD:/mnt/code daocloud.io/ystyle/ark bash</span><br><span class="line"><span class="meta">#</span> 先把java-core转为mplt文件</span><br><span class="line">jbc2mpl -injar java-core.jar</span><br><span class="line"><span class="meta">#</span> 用java-core.jar编译并打包Test.java</span><br><span class="line">java2jar Test.jar java-core.jar Test.java</span><br><span class="line"><span class="meta">#</span> 把Test.jar生成mpl文件</span><br><span class="line">jbc2mpl -mplt java-core.mplt -injar Test.jar -out Test</span><br><span class="line"><span class="meta">#</span> mpl2mpl</span><br><span class="line">maple --run=me:mpl2mpl --option="--quiet:--quiet --regnativefunc --maplelinker" Test.mpl --save-temps</span><br><span class="line"><span class="meta">#</span> 编译.VtableImpl.mpl文件，生成后端优化后的汇编文件(.VtableImpl.s)。</span><br><span class="line">mplcg --fpic --maplelinker --no-pie --quiet --verbose-asm Test.VtableImpl.mpl</span><br><span class="line"><span class="meta">#</span> 后续用android ndk可以把.s文件编译出能在安卓上运行的程序, 因为汇编的原因， linux的GCC是编译不了的</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;方舟编译器编译过程&quot;&gt;&lt;a href=&quot;#方舟编译器编译过程&quot; class=&quot;headerlink&quot; title=&quot;方舟编译器编译过程&quot;&gt;&lt;/a&gt;方舟编译器编译过程&lt;/h1&gt;&lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="编程" scheme="http://ystyle.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="android" scheme="http://ystyle.top/tags/android/"/>
    
      <category term="ark" scheme="http://ystyle.top/tags/ark/"/>
    
  </entry>
  
  <entry>
    <title>用docker编译方舟编译器</title>
    <link href="http://ystyle.top/2019/09/06/compile-ark/"/>
    <id>http://ystyle.top/2019/09/06/compile-ark/</id>
    <published>2019-09-06T12:22:21.000Z</published>
    <updated>2020-09-25T07:11:48.739Z</updated>
    
    <content type="html"><![CDATA[<h1 id="用docker编译方舟编译器"><a href="#用docker编译方舟编译器" class="headerlink" title="用docker编译方舟编译器"></a>用docker编译方舟编译器</h1><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol><li>下载方舟源码: <code>git clone https://code.opensource.huaweicloud.com/HarmonyOS/OpenArkCompiler.git</code></li><li>需要安装docker<blockquote><p>生成出来的镜像以后可作为CI里编译方舟应用时的编译环境。<br>现在可用来做getting start的环境，简单编译环境的搭建</p></blockquote></li></ol><h3 id="dockerfile"><a href="#dockerfile" class="headerlink" title="dockerfile"></a>dockerfile</h3><blockquote><p>把下面的dockerfile放到方舟源码根目录下</p></blockquote><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">16.04</span> AS build-<span class="keyword">env</span></span><br><span class="line"><span class="keyword">MAINTAINER</span> https://www.openarkcompiler.cn</span><br><span class="line"></span><br><span class="line"><span class="comment"># Setting up the build environment</span></span><br><span class="line"><span class="keyword">RUN</span> sed -i 's/archive.ubuntu.com/mirrors.163.com/g' /etc/apt/sources.list &amp;&amp; \</span><br><span class="line">    dpkg --add-architecture i386 &amp;&amp; \</span><br><span class="line">    apt-get -y update &amp;&amp; \</span><br><span class="line">    apt-get -y dist-upgrade &amp;&amp; \</span><br><span class="line">    apt-get -y install openjdk-8-jdk git-core build-essential zlib1g-dev libc6-dev-i386 g++-multilib gcc-multilib linux-libc-dev:i386 &amp;&amp; \</span><br><span class="line">    apt-get -y install gcc-5-aarch64-linux-gnu g++-5-aarch64-linux-gnu unzip tar curl &amp;&amp; \</span><br><span class="line">    apt-get -y install python3-paramiko python-paramiko python-requests &amp;&amp; \</span><br><span class="line">    mkdir -p /tools/ninja /tools/gn</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在国内请反注释下行, 因为容器也是个单独的系统，所以别用127.0.0.1</span></span><br><span class="line"><span class="comment">#ENV http_proxy=http://192.168.3.81:1081 \ </span></span><br><span class="line"><span class="comment">#    https_proxy=http://192.168.3.81:1081</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span> cd /tools &amp;&amp; \</span><br><span class="line">    curl -C - -LO http://releases.llvm.org/8.0.0/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz &amp;&amp; \</span><br><span class="line">    curl -LO https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-linux.zip &amp;&amp; \</span><br><span class="line">    curl -LO http://tools.harmonyos.com/mirrors/gn/1523/linux/gn.1523.tar &amp;&amp; \</span><br><span class="line">    tar Jvxf /tools/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz -C /tools/ &amp;&amp; \</span><br><span class="line">    unzip /tools/ninja-linux.zip -d /tools/ninja/ &amp;&amp; \</span><br><span class="line">    tar xvf /tools/gn.1523.tar &amp;&amp; \</span><br><span class="line">    chmod a+x /tools/gn/gn &amp;&amp; \</span><br><span class="line">    rm /tools/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz /tools/ninja-linux.zip &amp;&amp; \</span><br><span class="line">    rm -rf /var/cache/apt/archives</span><br><span class="line"></span><br><span class="line"><span class="comment"># copy source</span></span><br><span class="line"><span class="keyword">COPY</span> . /OpenArkCompiler</span><br><span class="line"><span class="keyword">WORKDIR</span> /OpenArkCompiler</span><br><span class="line"></span><br><span class="line"><span class="comment"># create symbolic link</span></span><br><span class="line"><span class="keyword">RUN</span> mkdir -p /OpenArkCompiler/tools /OpenArkCompiler/tools/gn &amp;&amp; \</span><br><span class="line">    ln -s /tools/ninja /OpenArkCompiler/tools/ninja_1.9.0 &amp;&amp; \</span><br><span class="line">    ln -s /tools/gn/gn /OpenArkCompiler/tools/gn/gn &amp;&amp; \</span><br><span class="line">    ln -s /tools/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04 /OpenArkCompiler/tools/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04</span><br><span class="line"></span><br><span class="line"><span class="comment"># compile</span></span><br><span class="line"><span class="keyword">RUN</span> ["/bin/bash", "-c", "source build/envsetup.sh &amp;&amp; make &amp;&amp; ls -al "]</span><br><span class="line"></span><br><span class="line"><span class="comment"># build final docker image</span></span><br><span class="line"><span class="keyword">FROM</span> ubuntu:<span class="number">16.04</span></span><br><span class="line"><span class="keyword">RUN</span> sed -i 's/archive.ubuntu.com/mirrors.163.com/g' /etc/apt/sources.list &amp;&amp; \</span><br><span class="line">    apt-get -y update &amp;&amp; \</span><br><span class="line">    apt-get install -y openjdk-8-jdk curl vim &amp;&amp; \</span><br><span class="line">    rm -rf /var/cache/apt/archives</span><br><span class="line"><span class="keyword">COPY</span> --from=build-env /OpenArkCompiler/output /OpenArkCompiler</span><br><span class="line"><span class="keyword">VOLUME</span> /OpenArkCompiler</span><br><span class="line"><span class="keyword">ENV</span> PATH=/OpenArkCompiler/bin:$PATH</span><br><span class="line"><span class="keyword">CMD</span> maple -h</span><br></pre></td></tr></table></figure><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><blockquote><p>第一次编译安装依赖会慢点， 之后因为docker缓存每次编译会跳过依赖安装从复制源码开始<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t ark:latest .</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm ark:latest</span><br></pre></td></tr></table></figure><h3 id="交互模式"><a href="#交互模式" class="headerlink" title="交互模式"></a>交互模式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run --rm -ti ark:latest bash</span><br><span class="line">maple -h</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://ystyle.top/2019/09/06/ark-test-axample/">方舟编译java代码教程</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;用docker编译方舟编译器&quot;&gt;&lt;a href=&quot;#用docker编译方舟编译器&quot; class=&quot;headerlink&quot; title=&quot;用docker编译方舟编译器&quot;&gt;&lt;/a&gt;用docker编译方舟编译器&lt;/h1&gt;&lt;h3 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准
      
    
    </summary>
    
      <category term="编程" scheme="http://ystyle.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="docker" scheme="http://ystyle.top/tags/docker/"/>
    
      <category term="linux" scheme="http://ystyle.top/tags/linux/"/>
    
      <category term="android" scheme="http://ystyle.top/tags/android/"/>
    
      <category term="ark" scheme="http://ystyle.top/tags/ark/"/>
    
  </entry>
  
  <entry>
    <title>Beat Saber mod安装方法</title>
    <link href="http://ystyle.top/2019/04/05/beat-saber-mod-install/"/>
    <id>http://ystyle.top/2019/04/05/beat-saber-mod-install/</id>
    <published>2019-04-05T06:46:26.000Z</published>
    <updated>2019-06-30T05:50:26.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一定要先把Plugins目录删掉"><a href="#一定要先把Plugins目录删掉" class="headerlink" title="一定要先把Plugins目录删掉"></a>一定要先把Plugins目录删掉</h3><h3 id="下载安装ModAssistant-新版的mod管理器"><a href="#下载安装ModAssistant-新版的mod管理器" class="headerlink" title="下载安装ModAssistant 新版的mod管理器"></a>下载安装ModAssistant 新版的mod管理器</h3><ul><li>下载连接: <a href="https://github.com/Assistant/ModAssistant/releases/latest" target="_blank" rel="noopener">https://github.com/Assistant/ModAssistant/releases/latest</a></li><li>不要用BeatDrop了， bug太多了</li></ul><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ul><li>点击<code>I Agree</code>同意<br><img src="http://ww1.sinaimg.cn/large/5e53d68bly1g4jhedb4waj20z60jtta7.jpg" alt></li><li>选择需要的mod然后点右下角的<code>Install or Update</code><br><img src="http://ww1.sinaimg.cn/large/5e53d68bly1g4jheo7zy0j20z60jtacn.jpg" alt></li><li>至于设置，不设置也可以，但我是这么选择的<br><img src="http://ww1.sinaimg.cn/large/5e53d68bly1g4jhgkokosj20z60jtdgd.jpg" alt></li></ul><h3 id="最简安装需要的mod"><a href="#最简安装需要的mod" class="headerlink" title="最简安装需要的mod"></a>最简安装需要的mod</h3><table><thead><tr><th style="text-align:left">mod 名称</th><th style="text-align:left">说明 </th></tr></thead><tbody><tr><td style="text-align:left">SongLoader</td><td style="text-align:left">自定义歌曲加载</td></tr><tr><td style="text-align:left">ScoreSaber</td><td style="text-align:left">分数上传</td></tr><tr><td style="text-align:left">SongBrowser</td><td style="text-align:left">歌曲排序过滤</td></tr><tr><td style="text-align:left">Counters+</td><td style="text-align:left">游戏内统计插件</td></tr><tr><td style="text-align:left">BeatSaverDownloader</td><td style="text-align:left">游戏内歌曲下载插件</td></tr><tr><td style="text-align:left">Custom Sabers</td><td style="text-align:left">自定义光剑</td></tr><tr><td style="text-align:left">SyncSaber</td><td style="text-align:left">Bsaber歌单同步插件<a href="https://bsaber.com/" target="_blank" rel="noopener">要注册bsaber</a></td></tr></tbody></table><h3 id="其它mod推荐"><a href="#其它mod推荐" class="headerlink" title="其它mod推荐"></a>其它mod推荐</h3><table><thead><tr><th style="text-align:left">mod 名称</th><th style="text-align:left">说明 </th></tr></thead><tbody><tr><td style="text-align:left">Custom Colors</td><td style="text-align:left">自定义颜色</td></tr><tr><td style="text-align:left">Custom Avatars</td><td style="text-align:left">自定义人物</td></tr><tr><td style="text-align:left">Custom Platforms</td><td style="text-align:left">自定义场景</td></tr><tr><td style="text-align:left">Camera+</td><td style="text-align:left">第一/三人称切换</td></tr><tr><td style="text-align:left">BeatSaberDrinkWater</td><td style="text-align:left">健康提醒功能：提醒您在玩多长时间/数量的歌曲后喝点水！</td></tr><tr><td style="text-align:left">YUR Fit Calorie Tracker</td><td style="text-align:left">计算游戏消耗的卡路里</td></tr><tr><td style="text-align:left">AutoPause</td><td style="text-align:left">网络/fps不好时自动暂停</td></tr></tbody></table><h3 id="相关网站"><a href="#相关网站" class="headerlink" title="相关网站"></a>相关网站</h3><ul><li><a href="https://beatsaver.com/browse/newest" target="_blank" rel="noopener">第三方曲谱</a></li><li><a href="https://scoresaber.com/global" target="_blank" rel="noopener">排名网站</a></li><li><a href="https://bsaber.com/" target="_blank" rel="noopener">bsaber</a> <ul><li><a href="https://bsaber.com/beatdrop/" target="_blank" rel="noopener">Beat drop</a> MOD/音乐管理器</li><li>这里能下载歌曲、光剑、舞台、人物</li></ul></li><li><a href="https://beatmods.com" target="_blank" rel="noopener">新的mod网站</a></li><li><a href="https://wiki.assistant.moe/" target="_blank" rel="noopener">Beat saber的wiki(英文)</a> 里边有mod的安装方法之类的</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一定要先把Plugins目录删掉&quot;&gt;&lt;a href=&quot;#一定要先把Plugins目录删掉&quot; class=&quot;headerlink&quot; title=&quot;一定要先把Plugins目录删掉&quot;&gt;&lt;/a&gt;一定要先把Plugins目录删掉&lt;/h3&gt;&lt;h3 id=&quot;下载安装ModAs
      
    
    </summary>
    
      <category term="软件" scheme="http://ystyle.top/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="Beat Saber" scheme="http://ystyle.top/tags/Beat-Saber/"/>
    
      <category term="VR" scheme="http://ystyle.top/tags/VR/"/>
    
  </entry>
  
  <entry>
    <title>安装flutter</title>
    <link href="http://ystyle.top/2019/01/23/install-flitter-without-android-studio/"/>
    <id>http://ystyle.top/2019/01/23/install-flitter-without-android-studio/</id>
    <published>2019-01-23T10:47:21.000Z</published>
    <updated>2020-09-25T07:11:48.739Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装flutter"><a href="#安装flutter" class="headerlink" title="安装flutter"></a>安装flutter</h1><blockquote><p>因为不想安装Android Studio， 所以只安装了安装Android sdk</p></blockquote><h3 id="安装安卓sdk"><a href="#安装安卓sdk" class="headerlink" title="安装安卓sdk"></a>安装安卓sdk</h3><p>到<a href="https://developer.android.google.cn/studio/" target="_blank" rel="noopener">https://developer.android.google.cn/studio/</a> 下载 Android-sdk-tools命令行工具</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2019-01/chrome_2019-01-23_17-25-00.png" alt="chrome_2019-01-23_17-25-00.png" title>                </div>                <div class="image-caption">chrome_2019-01-23_17-25-00.png</div>            </figure><p>下载后直接解压就行了，如图。 解压后其实只有<code>tools</code>一个文件夹, 我已经执行过安装其它工具的命令了，所以有那么多文件夹</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2019-01/explorer_2019-01-23_17-26-32.png" alt="explorer_2019-01-23_17-26-32.png" title>                </div>                <div class="image-caption">explorer_2019-01-23_17-26-32.png</div>            </figure><p>在<code>android-sdk-windows</code>目录打开终端(按着shift 右键打开命令行)<br><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.\tools\bin\sdkmanager.bat --licenses</span><br><span class="line">.\tools\bin\sdkmanager.bat "build-tools;<span class="number">28</span>.<span class="number">0</span>.<span class="number">3</span>"</span><br><span class="line">.\tools\bin\sdkmanager.bat "platforms;android-<span class="number">28</span>"</span><br><span class="line">.\tools\bin\sdkmanager.bat "platform-tools"</span><br></pre></td></tr></table></figure></p><blockquote><p>如果需要代理在每句命令后面加上<code>--no_https --proxy=http --proxy_host=mirrors.neusoft.edu.cn --proxy_port=80</code></p></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2019-01/powershell_2019-01-23_17-30-42.png" alt="powershell_2019-01-23_17-30-42.png" title>                </div>                <div class="image-caption">powershell_2019-01-23_17-30-42.png</div>            </figure><p>过程中有提示确认的全部输入<code>y</code>再按回车键</p><h3 id="安装fluter"><a href="#安装fluter" class="headerlink" title="安装fluter"></a>安装fluter</h3><p>到官网<a href="https://flutter.io/docs/get-started/install/windows" target="_blank" rel="noopener">Windows install - Flutter</a>下载安装包，然后直接解压就行</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2019-01/explorer_2019-01-23_17-45-01.png" alt="explorer_2019-01-23_17-45-01.png" title>                </div>                <div class="image-caption">explorer_2019-01-23_17-45-01.png</div>            </figure><h3 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h3><ul><li>设置<code>ANDROID_HOME</code>变量<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2019-01/SystemPropertiesAdvanced_2019-01-23_17-45-44.png" alt="SystemPropertiesAdvanced_2019-01-23_17-45-44.png" title>                </div>                <div class="image-caption">SystemPropertiesAdvanced_2019-01-23_17-45-44.png</div>            </figure></li><li>设置flutter的变量<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2019-01/Boostnote_2019-01-23_17-47-12.png" alt="Boostnote_2019-01-23_17-47-12.png" title>                </div>                <div class="image-caption">Boostnote_2019-01-23_17-47-12.png</div>            </figure></li></ul><h3 id="gradle-换源"><a href="#gradle-换源" class="headerlink" title="gradle 换源"></a>gradle 换源</h3><ul><li>放一个init.gradle 文件到USER_HOME/.gradle/目录下</li><li>放一个后缀是.gradle的文件到 USER_HOME/.gradle/init.d/ 目录下.</li><li>放一个后缀是.gradle的文件到 GRADLE_HOME/init.d/ 目录下.</li><li><p><code>init.gradle</code>如下</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">allprojects</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">        maven &#123; url <span class="string">'http://maven.aliyun.com/nexus/content/repositories/central/'</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>另一个方法是在当前项目下修改build.gradle</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">repositories</span> &#123;</span><br><span class="line">    mavenLocal()</span><br><span class="line"></span><br><span class="line">    maven &#123; url <span class="string">'http://maven.aliyun.com/nexus/content/repositories/central/'</span> &#125;</span><br><span class="line"></span><br><span class="line">    mavenCentral()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>然后打包时会自动执行项目下的<code>./gradlew</code>, 会启用上面的源。如果没安装gradle的话会自动下载， 下载很慢， 可以自己去Gradle官网下载然解压配置到环境变量</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2019-01/powershell_2019-01-23_18-14-17.png" alt="powershell_2019-01-23_18-14-17.png" title>                </div>                <div class="image-caption">powershell_2019-01-23_18-14-17.png</div>            </figure><p>如图，安装编译工具链已经安装完成，！号的表示可选操作安装</p><p>之后就可以用喜欢的编辑器或IDE开发fluter了， 而不需要安装android stuiod,<br>特别是只做编译一下的</p><h3 id="编译测试"><a href="#编译测试" class="headerlink" title="编译测试"></a>编译测试</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2019-01/powershell_2019-01-23_18-43-50.png" alt="powershell_2019-01-23_18-43-50.png" title>                </div>                <div class="image-caption">powershell_2019-01-23_18-43-50.png</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装flutter&quot;&gt;&lt;a href=&quot;#安装flutter&quot; class=&quot;headerlink&quot; title=&quot;安装flutter&quot;&gt;&lt;/a&gt;安装flutter&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;因为不想安装Android Studio， 所以只安装了安
      
    
    </summary>
    
      <category term="编程" scheme="http://ystyle.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="android" scheme="http://ystyle.top/tags/android/"/>
    
      <category term="flutter" scheme="http://ystyle.top/tags/flutter/"/>
    
  </entry>
  
  <entry>
    <title>使用dat代替resilio sync分享数据</title>
    <link href="http://ystyle.top/2018/12/03/Use-dat-instead-of-resilio-sync-to-share-data/"/>
    <id>http://ystyle.top/2018/12/03/Use-dat-instead-of-resilio-sync-to-share-data/</id>
    <published>2018-12-03T07:57:33.000Z</published>
    <updated>2020-09-25T07:11:48.735Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>用btsync/resilio sync绝大部分原因就是用来做文件分享，只要简单添加个文件夹，把key复制出去就好了，同步用户数上来后甚至可以把软件关掉也不会影响分享</p></blockquote><blockquote><p>在我看来btsync/resilio sync是个绝佳的分享软件，后来那些号称代替它的都只是同步软件或者网盘，核心并不是用来分享也不太适合用来做分享</p></blockquote><h3 id="windows-安装方法"><a href="#windows-安装方法" class="headerlink" title="windows 安装方法"></a>windows 安装方法</h3><ul><li>下载安装<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">Node.js</a></li><li>然后按<code>win + s</code> 搜索<code>powershell</code> 打开</li><li>执行<code>npm install -g dat</code></li></ul><h3 id="linux-和-mac-安装方法"><a href="#linux-和-mac-安装方法" class="headerlink" title="linux 和 mac 安装方法"></a>linux 和 mac 安装方法</h3><blockquote><p>linux 和 mac 有桌面版, 当然也可以用windows的安装方法， 但有界面更好操作</p><ul><li><a href="https://github.com/dat-land/dat-desktop/releases/download/v2.0.0/dat-desktop-2.0.0.dmg" target="_blank" rel="noopener">mac</a></li><li><a href="https://github.com/dat-land/dat-desktop/releases/download/v2.0.0/dat-desktop-2.0.0-x86_64.AppImage" target="_blank" rel="noopener">linux</a></li></ul></blockquote><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2018-11/screenshot.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="分享文件"><a href="#分享文件" class="headerlink" title="分享文件"></a>分享文件</h3><ul><li>在要分享的文件夹按着<code>shift</code> 点击右键 - <code>在此处打开powerShell窗口</code>(也可能是命令行窗口)都可以<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2018-12/explorer_2018-12-04_10-21-44.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li>方法一<ul><li>在窗口输入命令 <code>dat create</code> 以创建共享文件夹<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2018-12/powershell_2018-12-04_10-27-04.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li><li>在窗口输入命令 <code>dat share</code> 共享文件夹， 等待进度知完成， 按<code>ctrl + c</code> 结束<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2018-12/powershell_2018-12-04_10-27-59.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ul></li><li>即时修改文件<ul><li>在窗口输入命令 <code>dat sync</code> 在共享目录删除、修改、新增文件时会自动分享， 这个可以一直挂着， 要结束可以按<code>ctrl + c</code><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2018-12/powershell_2018-12-04_10-28-39.png" alt title>                </div>                <div class="image-caption"></div>            </figure><blockquote><p>注意看我选中的那行 <code>dat://0406903bdf62a99da7edb01ccb0c950f33d5c099f444be22afaeb6bb24ffa8a5</code><br>分享的文件只有自己机器上能修改， 别人下载后是无法修改的， 相当于resilio sync的只读分享</p></blockquote></li></ul></li></ul><h3 id="在线查看分享的文件列表"><a href="#在线查看分享的文件列表" class="headerlink" title="在线查看分享的文件列表"></a>在线查看分享的文件列表</h3><ul><li>打开网站<a href="https://datbase.org" target="_blank" rel="noopener">https://datbase.org</a></li><li>在左上角搜索 <code>dat create</code>、<code>dat share</code>、 <code>dat sync</code>、或者<code>dat status</code>打印出来的以 <code>dat://xxx</code>开头的地址<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2018-12/chrome_2018-12-04_10-30-08.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ul><h3 id="下载别人分享的文件"><a href="#下载别人分享的文件" class="headerlink" title="下载别人分享的文件"></a>下载别人分享的文件</h3><ul><li>在要保存文件的文件夹按着<code>shift</code> 点击右键 - <code>在此处打开powerShell窗口</code></li><li>执行 <code>dat clone dat://0406903bdf62a99da7edb01ccb0c950f33d5c099f444be22afaeb6bb24ffa8a5 测试2</code></li><li>结尾的<code>测试2</code>为存放的文件名字，如果没写，文件夹的名称为那串很长的key<br><img src="https://dl.ystyle.top/images/2018-12/powershell_2018-12-04_10-36-59.png" alt><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2018-12/explorer_2018-12-04_10-38-02.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ul><h3 id="与别人分享的文件保持同步"><a href="#与别人分享的文件保持同步" class="headerlink" title="与别人分享的文件保持同步"></a>与别人分享的文件保持同步</h3><ul><li>在已经下载的文件夹按着<code>shift</code> 点击右键 - <code>在此处打开powerShell窗口</code></li><li>输入 <code>dat sync</code> 开启同步<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://dl.ystyle.top/images/2018-12/powershell_2018-12-04_10-40-34.png" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;用btsync/resilio sync绝大部分原因就是用来做文件分享，只要简单添加个文件夹，把key复制出去就好了，同步用户数上来后甚至可以把软件关掉也不会影响分享&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在我看来bt
      
    
    </summary>
    
      <category term="软件" scheme="http://ystyle.top/categories/%E8%BD%AF%E4%BB%B6/"/>
    
    
      <category term="dat" scheme="http://ystyle.top/tags/dat/"/>
    
      <category term="resilio sync" scheme="http://ystyle.top/tags/resilio-sync/"/>
    
  </entry>
  
  <entry>
    <title>windows 10 右键用子系统Archlinux打开文件</title>
    <link href="http://ystyle.top/2018/11/01/Windows-10-open-with-wsl-Archlinux/"/>
    <id>http://ystyle.top/2018/11/01/Windows-10-open-with-wsl-Archlinux/</id>
    <published>2018-11-01T07:57:33.000Z</published>
    <updated>2020-09-25T07:11:48.735Z</updated>
    
    <content type="html"><![CDATA[<h3 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h3><ul><li>windows 10 更新到最新</li><li>开启 Windows Subsystem for Linux 功能<blockquote><p>过程请看其它文章</p></blockquote></li></ul><h3 id="Archlinux简略安装配置过程"><a href="#Archlinux简略安装配置过程" class="headerlink" title="Archlinux简略安装配置过程"></a>Archlinux简略安装配置过程</h3><ul><li>用<a href="https://github.com/yuk7/ArchWSL/" target="_blank" rel="noopener">yuk7/ArchWSL</a> 安装Archlinux</li><li>进行<a href="https://github.com/yuk7/ArchWSL/wiki/How-to-Setup" target="_blank" rel="noopener">基础设置</a></li><li>安装<a href="https://spacevim.org/" target="_blank" rel="noopener">spacevim </a><br><code>curl -sLf https://spacevim.org/install.sh | bash</code></li><li>安装<a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Installing-ZSH" target="_blank" rel="noopener">zsh</a><br><code>pacman -S zsh</code></li><li>安装<a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">oh-my-zsh</a><br><code>sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</code></li></ul><h3 id="windows-右键菜单设置"><a href="#windows-右键菜单设置" class="headerlink" title="windows 右键菜单设置"></a>windows 右键菜单设置</h3><h3 id="以下存为文件-gt-文件夹空白位置右键打开zsh-reg"><a href="#以下存为文件-gt-文件夹空白位置右键打开zsh-reg" class="headerlink" title="以下存为文件 -&gt; 文件夹空白位置右键打开zsh.reg"></a>以下存为文件 -&gt; <code>文件夹空白位置右键打开zsh.reg</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\Open with Arch]</span><br><span class="line">&quot;Icon&quot;=&quot;Y:\\Users\\YSTYLE\\Downloads\\Arch\\Arch.exe&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\Open with Arch\command]</span><br><span class="line">@=&quot;Y:\\Users\\YSTYLE\\Downloads\\Arch\\Arch.exe run zsh&quot;</span><br></pre></td></tr></table></figure><blockquote><p>修改Arch.exe的位置，记得用\， 然后右键该文件点合并</p></blockquote><h3 id="以下存为文件-gt-文件夹空白位置右键打开vim-reg"><a href="#以下存为文件-gt-文件夹空白位置右键打开vim-reg" class="headerlink" title="以下存为文件 -&gt; 文件夹空白位置右键打开vim.reg"></a>以下存为文件 -&gt; <code>文件夹空白位置右键打开vim.reg</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\Open with Vim]</span><br><span class="line">&quot;Icon&quot;=&quot;Y:\\Users\\YSTYLE\\Downloads\\Arch\\Arch.exe&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\Background\shell\Open with Vim\command]</span><br><span class="line">@=&quot;Y:\\Users\\YSTYLE\\Downloads\\Arch\\Arch.exe run runvim.sh &apos;%V&apos;&quot;</span><br></pre></td></tr></table></figure><blockquote><p>处理方式同上</p></blockquote><p>同时要在Archlinux的/bin下面添加一文件<code>runvim.sh</code><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>!/bin/bash</span><br><span class="line"></span><br><span class="line">FILENAME=$1</span><br><span class="line">FILENAME=$&#123;FILENAME/:/&#125;</span><br><span class="line">FILENAME=$&#123;FILENAME//\\/\/&#125;</span><br><span class="line">FILENAME=/mnt/$&#123;FILENAME,&#125;</span><br><span class="line">vim $FILENAME</span><br></pre></td></tr></table></figure></p><p>执行命令: <code>sudo chmod +x /bin/runvim.sh</code></p><h3 id="以下存为文件-gt-文件右键用vim打开-reg"><a href="#以下存为文件-gt-文件右键用vim打开-reg" class="headerlink" title="以下存为文件 -&gt; 文件右键用vim打开.reg"></a>以下存为文件 -&gt; <code>文件右键用vim打开.reg</code></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\Open with Vim]</span><br><span class="line">&quot;Icon&quot;=&quot;D:\\Application\\Neovim\\bin\\nvim-qt.exe&quot;</span><br><span class="line"></span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\Open with Vim\command]</span><br><span class="line">@=&quot;Y:\\Users\\YSTYLE\\Downloads\\Arch\\Arch.exe run runvim.sh &apos;%1&apos;&quot;</span><br></pre></td></tr></table></figure><h3 id="功能测试"><a href="#功能测试" class="headerlink" title="功能测试"></a>功能测试</h3><p>三个文件都右键合并到注册表。</p><ul><li>在文件夹右空白位置右键 可以看到<ul><li>Open with Arch: 可以在Archlinux中打开当前目录</li><li>Open with Vim： 可以在vim打开当前目录</li></ul></li><li>在文件右键可以看到<ul><li>Open with Vim： 可以在vim打开当前选中文件</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;要求&quot;&gt;&lt;a href=&quot;#要求&quot; class=&quot;headerlink&quot; title=&quot;要求&quot;&gt;&lt;/a&gt;要求&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;windows 10 更新到最新&lt;/li&gt;
&lt;li&gt;开启 Windows Subsystem for Linux 功能&lt;bloc
      
    
    </summary>
    
      <category term="系统" scheme="http://ystyle.top/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="Archlinux" scheme="http://ystyle.top/tags/Archlinux/"/>
    
      <category term="WSL" scheme="http://ystyle.top/tags/WSL/"/>
    
  </entry>
  
  <entry>
    <title>国内免翻墙预下载kubernetes镜像</title>
    <link href="http://ystyle.top/2018/07/02/pre-download-kubernetes-image/"/>
    <id>http://ystyle.top/2018/07/02/pre-download-kubernetes-image/</id>
    <published>2018-07-02T07:24:23.000Z</published>
    <updated>2020-09-25T07:11:48.739Z</updated>
    
    <content type="html"><![CDATA[<h3 id="当前组件版本信息"><a href="#当前组件版本信息" class="headerlink" title="当前组件版本信息"></a>当前组件版本信息</h3><table><thead><tr><th style="text-align:left">组件</th><th style="text-align:left">变量</th><th style="text-align:left">版本</th></tr></thead><tbody><tr><td style="text-align:left">k8s版本</td><td style="text-align:left">K8S_VERSION</td><td style="text-align:left">v1.11.0</td></tr><tr><td style="text-align:left">ETCD版本</td><td style="text-align:left">ETCD_VERSION</td><td style="text-align:left">3.1.12</td></tr><tr><td style="text-align:left">Dashboard版本</td><td style="text-align:left">DASHBOARD_VERSION</td><td style="text-align:left">v1.8.3</td></tr><tr><td style="text-align:left">flannel版本</td><td style="text-align:left">FLANNEL_VERSION</td><td style="text-align:left">v0.10.0-amd64</td></tr><tr><td style="text-align:left">DNS版本</td><td style="text-align:left">DNS_VERSION</td><td style="text-align:left">1.14.8</td></tr><tr><td style="text-align:left">PAUSE版本</td><td style="text-align:left">PAUSE_VERSION</td><td style="text-align:left">3.1</td></tr></tbody></table><blockquote><p>需要安装其它版本时，修改这几个变量就好了</p></blockquote><h3 id="下载脚本"><a href="#下载脚本" class="headerlink" title="下载脚本"></a>下载脚本</h3><blockquote><p>把以下内容存为 <code>pull_k8s_images.sh</code> 复制到目录机器上执行即可</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>## 版本信息</span><br><span class="line">K8S_VERSION=v1.11.0</span><br><span class="line">ETCD_VERSION=3.1.12</span><br><span class="line">DASHBOARD_VERSION=v1.8.3</span><br><span class="line">FLANNEL_VERSION=v0.10.0-amd64</span><br><span class="line">DNS_VERSION=1.14.8</span><br><span class="line">PAUSE_VERSION=3.1</span><br><span class="line"><span class="meta">#</span># 基本组件</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver-amd64:$K8S_VERSION</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager-amd64:$K8S_VERSION</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler-amd64:$K8S_VERSION</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy-amd64:$K8S_VERSION</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/etcd-amd64:$ETCD_VERSION</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/pause-amd64:$PAUSE_VERSION</span><br><span class="line"><span class="meta">#</span>## 网络</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-sidecar-amd64:$DNS_VERSION</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-kube-dns-amd64:$DNS_VERSION</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-dnsmasq-nanny-amd64:$DNS_VERSION</span><br><span class="line">docker pull quay.io/coreos/flannel:$FLANNEL_VERSION</span><br><span class="line"><span class="meta">#</span>## 前端</span><br><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/kubernetes-dashboard-amd64:$DASHBOARD_VERSION</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span># 修改tag</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver-amd64:$K8S_VERSION k8s.gcr.io/kube-apiserver-amd64:$K8S_VERSION</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager-amd64:$K8S_VERSION k8s.gcr.io/kube-controller-manager-amd64:$K8S_VERSION</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler-amd64:$K8S_VERSION k8s.gcr.io/kube-scheduler-amd64:$K8S_VERSION</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy-amd64:$K8S_VERSION k8s.gcr.io/kube-proxy-amd64:$K8S_VERSION</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/etcd-amd64:$ETCD_VERSION k8s.gcr.io/etcd-amd64:$ETCD_VERSION</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/pause-amd64:$PAUSE_VERSION k8s.gcr.io/pause-amd64:$PAUSE_VERSION</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-sidecar-amd64:$DNS_VERSION k8s.gcr.io/k8s-dns-sidecar-amd64:$DNS_VERSION</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-kube-dns-amd64:$DNS_VERSION k8s.gcr.io/k8s-dns-kube-dns-amd64:$DNS_VERSION</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-dnsmasq-nanny-amd64:$DNS_VERSION k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:$DNS_VERSION</span><br><span class="line">docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/kubernetes-dashboard-amd64:$DASHBOARD_VERSION k8s.gcr.io/kubernetes-dashboard-amd64:$DASHBOARD_VERSION</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span># 删除镜像</span><br><span class="line">docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kube-apiserver-amd64:$K8S_VERSION</span><br><span class="line">docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kube-controller-manager-amd64:$K8S_VERSION</span><br><span class="line">docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kube-scheduler-amd64:$K8S_VERSION</span><br><span class="line">docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kube-proxy-amd64:$K8S_VERSION</span><br><span class="line">docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/etcd-amd64:$ETCD_VERSION</span><br><span class="line">docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/pause-amd64:$PAUSE_VERSION</span><br><span class="line">docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-sidecar-amd64:$DNS_VERSION</span><br><span class="line">docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-kube-dns-amd64:$DNS_VERSION</span><br><span class="line">docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/k8s-dns-dnsmasq-nanny-amd64:$DNS_VERSION</span><br><span class="line">docker rmi registry.cn-hangzhou.aliyuncs.com/google_containers/kubernetes-dashboard-amd64:$DASHBOARD_VERSION</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;当前组件版本信息&quot;&gt;&lt;a href=&quot;#当前组件版本信息&quot; class=&quot;headerlink&quot; title=&quot;当前组件版本信息&quot;&gt;&lt;/a&gt;当前组件版本信息&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;
      
    
    </summary>
    
      <category term="系统" scheme="http://ystyle.top/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="http://ystyle.top/tags/linux/"/>
    
      <category term="kubernetes" scheme="http://ystyle.top/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>手工申请Let&amp;#180;s Encrypt 证书</title>
    <link href="http://ystyle.top/2018/05/11/apply-lets-encrypt-by-manual/"/>
    <id>http://ystyle.top/2018/05/11/apply-lets-encrypt-by-manual/</id>
    <published>2018-05-11T03:30:48.000Z</published>
    <updated>2020-09-25T07:11:48.739Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本教程讲如何手工申请证书，并提取出来， 因为有些软件并不能直接使用官方提供的脚本，如堡垒机的防火墙软件</p></blockquote><h3 id="安装letsencrypt"><a href="#安装letsencrypt" class="headerlink" title="安装letsencrypt"></a>安装letsencrypt</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/letsencrypt/letsencrypt</span><br><span class="line">cd letsencrypt</span><br><span class="line">./letsencrypt-auto --help</span><br></pre></td></tr></table></figure><h3 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./letsencrypt-auto certonly --manual --email lxy5266@live.com -d web.ystyle.top</span><br></pre></td></tr></table></figure><p>出现以下内容时，打开一个新的终端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Saving debug log to /var/log/letsencrypt/letsencrypt.log</span><br><span class="line">Plugins selected: Authenticator manual, Installer None</span><br><span class="line">Obtaining a new certificate</span><br><span class="line">Performing the following challenges:</span><br><span class="line">http-01 challenge for web.ystyle.top</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">NOTE: The IP of this machine will be publicly logged as having requested this</span><br><span class="line">certificate. If you&apos;re running certbot in manual mode on a machine that is not</span><br><span class="line">your server, please ensure you&apos;re okay with that.</span><br><span class="line"></span><br><span class="line">Are you OK with your IP being logged?</span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">(Y)es/(N)o: Y</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Create a file containing just this data:</span><br><span class="line"></span><br><span class="line">tzhL9xuoqMj4F57SMCiTvEpno36QM0nlAFwo8SDuHvk.2lxeywshhzsj142WeXRomKhAOmOFM5Iwlkbc5z1jljc</span><br><span class="line"></span><br><span class="line">And make it available on your web server at this URL:</span><br><span class="line"></span><br><span class="line">http://web.ystyle.top/.well-known/acme-challenge/tzhL9xuoqMj4F57SMCiTvEpno36QM0nlAFwo8SDuHvk</span><br><span class="line"></span><br><span class="line">-------------------------------------------------------------------------------</span><br><span class="line">Press Enter to Continue</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /tmp/letsencrypt/public_html/.well-known/acme-challenge</span><br><span class="line">cd /tmp/letsencrypt/public_html</span><br><span class="line">printf "%s" tzhL9xuoqMj4F57SMCiTvEpno36QM0nlAFwo8SDuHvk.2lxeywshhzsj142WeXRomKhAOmOFM5Iwlkbc5z1jljc &gt; .well-known/acme-challenge/tzhL9xuoqMj4F57SMCiTvEpno36QM0nlAFwo8SDuHvk</span><br><span class="line"><span class="meta">#</span> echo 中的 tzhL9xuoqMj4F57SMCiTvEpno36QM0nlAFwo8SDuHvk.2lxeywshhzsj142WeXRomKhAOmOFM5Iwlkbc5z1jljc 是Create a file containing just this data: 下面那行</span><br><span class="line"><span class="meta">#</span> .well-known/acme-challenge/tzhL9xuoqMj4F57SMCiTvEpno36QM0nlAFwo8SDuHvk 是 And make it available on your web server at this URL: 下面那行的url中的</span><br></pre></td></tr></table></figure><p>然后执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo python -c \</span><br><span class="line">"import BaseHTTPServer, SimpleHTTPServer; \</span><br><span class="line">s = BaseHTTPServer.HTTPServer(('', 80), SimpleHTTPServer.SimpleHTTPRequestHandler); \</span><br><span class="line">s.serve_forever()"</span><br></pre></td></tr></table></figure><blockquote><p>注意机器的80端口要先关闭</p></blockquote><p>返回之前的窗口按回车，如果证书成功创建，会出现下面的提示：</p><ul><li>Congratulations! Your certificate and chain have been saved at …</li></ul><p>然后在<code>/etc/letsencrypt/archive/</code>目录就能看到申请域名的证书了， 查看把<a href="/2018/05/11/Lets-Encrypt-convert-to-pkcs1/">privkey.pem转成pkcs1格式</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本教程讲如何手工申请证书，并提取出来， 因为有些软件并不能直接使用官方提供的脚本，如堡垒机的防火墙软件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;安装letsencrypt&quot;&gt;&lt;a href=&quot;#安装letsencrypt&quot; class=
      
    
    </summary>
    
      <category term="系统" scheme="http://ystyle.top/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="ssl" scheme="http://ystyle.top/tags/ssl/"/>
    
      <category term="https" scheme="http://ystyle.top/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>Let&#39;s Encrypt 证书转 PKCS1 (传统私钥格式)</title>
    <link href="http://ystyle.top/2018/05/11/Lets-Encrypt-convert-to-pkcs1/"/>
    <id>http://ystyle.top/2018/05/11/Lets-Encrypt-convert-to-pkcs1/</id>
    <published>2018-05-11T02:58:46.000Z</published>
    <updated>2020-09-25T07:11:48.735Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Let’s-Encrypt-证书转-PKCS1-传统私钥格式"><a href="#Let’s-Encrypt-证书转-PKCS1-传统私钥格式" class="headerlink" title="Let’s Encrypt 证书转 PKCS1 (传统私钥格式)"></a>Let’s Encrypt 证书转 PKCS1 (传统私钥格式)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl rsa -in privkey1.pem -out pkcs1.pem</span><br></pre></td></tr></table></figure><p>privkey1.pem 文件格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN PRIVATE KEY-----</span><br><span class="line">MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBALkFbpP0ZVpob96k</span><br><span class="line">YOM+ljfA3QOsG342iO/GQSClR04DGAB6mp4ZtKq1cB34w44FsfEg4TCsUL2y2TKl</span><br><span class="line">CDGsHj21cMj7gmPwy4ojXkcSYjyTv61EM6UnlMVIvYn0oDca5BvJUCGWnGX5idXv</span><br><span class="line">KPE/2XV2RsCmDWLFJ3ko49tpDTRZAgMBAAECgYBiKrOk5MLx2P+iDW0qpQZmxnl9</span><br><span class="line">fU+JA75cGcBsZcUTayjM+EAZKmJlQKcf/+Eh9XuYCG3yuTqNq9r5t/5E/KF+DTNb</span><br><span class="line">uhfLSmbwPChbv7R87NDiwRh6irNr9WuRjBHkHEFr4rJPUcKLi5eiDIOVBPWnRlPS</span><br><span class="line">JqpkF9MCl3JWSZxAQQJBAOF8+X4guXRuHQfw5GgyabEBkyfb3f517jjU6UCMvcKw</span><br><span class="line">XjKFRR1q8BhYzREBXkwm0pRNHhmlFeQH+mqSDJPGmv0CQQDSDqlBGlwbG6Wvbvnx</span><br><span class="line">mU4t0vwHWfW5ut7jrggpDTM18REqFH+PtTwsYX7eaFm6hIR2SXAsInxky8iGRXS/</span><br><span class="line">wmONAkEA22pc7JqzW9R6c2u5FptXtWIu665LSn0/HhYwExvg2z37q3V7V7DjiQ2A</span><br><span class="line">HngSZk+wwZZ5H8NAlfAdgO41RucPkQJADtIZ/w3tEbyRpB8gY3t9mJ4aSip+u+wD</span><br><span class="line">be0Jhlv4EQZBP8bSeUFATaFTYj3alt5iujXUREjqnfIC4/ZilmUQwQJAY3OGqyFh</span><br><span class="line">8OJbBThDdplaRGu/vi4heTUdCgUfUG2HNAlNvMof8sSpk3xZVq7dt/jXIDHZiho6</span><br><span class="line">wgkm05RNhx+HXg==</span><br><span class="line">-----END PRIVATE KEY-----</span><br></pre></td></tr></table></figure></p><p>pkcs1.pem文件格式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIICXAIBAAKBgQC5BW6T9GVaaG/epGDjPpY3wN0DrBt+NojvxkEgpUdOAxgAepqe</span><br><span class="line">GbSqtXAd+MOOBbHxIOEwrFC9stkypQgxrB49tXDI+4Jj8MuKI15HEmI8k7+tRDOl</span><br><span class="line">J5TFSL2J9KA3GuQbyVAhlpxl+YnV7yjxP9l1dkbApg1ixSd5KOPbaQ00WQIDAQAB</span><br><span class="line">AoGAYiqzpOTC8dj/og1tKqUGZsZ5fX1PiQO+XBnAbGXFE2sozPhAGSpiZUCnH//h</span><br><span class="line">IfV7mAht8rk6java+bf+RPyhfg0zW7oXy0pm8DwoW7+0fOzQ4sEYeoqza/VrkYwR</span><br><span class="line">5BxBa+KyT1HCi4uXogyDlQT1p0ZT0iaqZBfTApdyVkmcQEECQQDhfPl+ILl0bh0H</span><br><span class="line">8ORoMmmxAZMn293+de441OlAjL3CsF4yhUUdavAYWM0RAV5MJtKUTR4ZpRXkB/pq</span><br><span class="line">kgyTxpr9AkEA0g6pQRpcGxulr2758ZlOLdL8B1n1ubre464IKQ0zNfERKhR/j7U8</span><br><span class="line">LGF+3mhZuoSEdklwLCJ8ZMvIhkV0v8JjjQJBANtqXOyas1vUenNruRabV7ViLuuu</span><br><span class="line">S0p9Px4WMBMb4Ns9+6t1e1ew44kNgB54EmZPsMGWeR/DQJXwHYDuNUbnD5ECQA7S</span><br><span class="line">Gf8N7RG8kaQfIGN7fZieGkoqfrvsA23tCYZb+BEGQT/G0nlBQE2hU2I92pbeYro1</span><br><span class="line">1ERI6p3yAuP2YpZlEMECQGNzhqshYfDiWwU4Q3aZWkRrv74uIXk1HQoFH1BthzQJ</span><br><span class="line">TbzKH/LEqZN8WVau3bf41yAx2YoaOsIJJtOUTYcfh14=</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Let’s-Encrypt-证书转-PKCS1-传统私钥格式&quot;&gt;&lt;a href=&quot;#Let’s-Encrypt-证书转-PKCS1-传统私钥格式&quot; class=&quot;headerlink&quot; title=&quot;Let’s Encrypt 证书转 PKCS1 (传统私钥格式)
      
    
    </summary>
    
      <category term="系统" scheme="http://ystyle.top/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="linux" scheme="http://ystyle.top/tags/linux/"/>
    
  </entry>
  
</feed>
